---
title: "Min age"
output: html_document
date: "2024-09-12"
---
```{r}
library(dplR)
library(dplyr)
library(kableExtra)

```


```{r}
DendroMerge <- read_csv("DendroMergeforR.csv")

DendroMerge <- DendroMerge[,-8]
DendroMerge <- DendroMerge %>%
  mutate(ID2 = recode(ID2,
                      "C" = "Childs",
                      "L" = "Lower Beasley",
                      "S" = "Sheep",
                      "U" = "Upper Beasley",
                      "W" = "West Clear Creek",
                      ))

DendroMerge <- DendroMerge %>%
  rename(`Site ID` = `ID2`) 



```




Age vs size plot
```{r}
ggplot(DendroMerge, aes(x = PithHand, y = `Diameter (CM)`)) +
  labs( x= "Pith Year", y = "Diameter (cm)", title = "Diameter vs Pith Date") +
  geom_point(shape=18, size= 3)+
  geom_smooth( method = "lm", se = FALSE, size = 1.5)+
  scale_y_continuous(
    limits = c(0,100)
  ) +
scale_x_continuous(
  limits = c(1985,2020)
)+ theme_minimal()

p <-lm(data = DendroMerge, PithHand ~ `Diameter (CM)`)


```

```{r}
library(ggplot2)
library(dplyr)

# Get unique site IDs
site_ids <- unique(DendroMerge$`Site ID`)

# Loop through each site ID and generate a plot
for (site in site_ids) {
  # Filter data for the current site
  site_data <- DendroMerge %>% filter(`Site ID` == site)
  
  # Create the plot
  p <- ggplot(site_data, aes(x = PithHand, y = `Diameter (CM)`, color = `Site ID`)) +
    labs(x = "Pith Year", y = "Diameter (cm)", title = paste("Diameter vs Pith Date - Site:", site)) +
    geom_point(shape = 18, size = 3) +
    geom_smooth(method = "lm", se = FALSE, size = 1.5) +
    scale_y_continuous(limits = c(0, 100)) +
    scale_x_continuous(limits = c(1985, 2020)) +
    theme_minimal()
  
  # Save or print the plot
  print(p) # To view in the R console
}

```

```{r}
library(dplyr)

# Create an empty list to store model summaries
lm_results <- list()

# Get all unique site IDs
site_ids <- unique(DendroMerge$`Site ID`)

# Loop through each site
for (site in site_ids) {
  # Filter data for the current site and remove NA values in key columns
  site_data <- DendroMerge %>%
    filter(`Site ID` == site) %>%
    filter(!is.na(PithHand) & !is.na(`Diameter (CM)`))  # Remove rows with NA in PithHand or Diameter
  
  # Check if there's enough data after filtering
  if (nrow(site_data) > 1) {
    # Fit the linear model
    lm_model <- lm(`Diameter (CM)` ~ PithHand, data = site_data)
    
    # Extract summary details
    model_summary <- summary(lm_model)
    
    # Store results in the list
    lm_results[[site]] <- list(
      Coefficients = coef(model_summary),      # Coefficients (Intercept and Slope)
      R_squared = model_summary$r.squared,    # R-squared value
      Adj_R_squared = model_summary$adj.r.squared, # Adjusted R-squared value
      P_value = coef(model_summary)[2, 4]     # P-value for the slope
    )
  } else {
    # If there is not enough data, store a message
    lm_results[[site]] <- "Not enough data for linear model"
  }
}



```


Age vs Size correlation
```{r}
model <- lm(DendroMerge$`Diameter (CM)` ~ DendroMerge$PithHand, data = DendroMerge)
c
summary(model)
```



```{r}
# Step 1: Count the number of observations per site (ID2)
site_counts <- DendroMerge %>%
  count(`Site ID`)

# Step 2: Calculate mean diameter per site
mean_diameters_all_sites <- DendroMerge %>%
  group_by(`Site ID`) %>%
  summarise(mean_diameter = mean(`Diameter (CM)`, na.rm = TRUE))  # Calculate mean diameter

# Step 3: Combine count and mean diameter into one table
combined_table <- site_counts %>%
  left_join(mean_diameters_all_sites, by = "Site ID")

# Print the result
combined_table %>%
  kable("html", caption = "Summary Table")

```

```{r}
DendroMerge$InnerRing <- as.numeric(DendroMerge$InnerRing)

summary(DendroMerge$InnerRing)
DendroMerge %>%
  count(ID2)

```



Age bar graph


```{r}
DendroSiteAges <- read_csv("DendroSiteAges.csv")

DendroSiteAges <- DendroSiteAges %>%
  arrange(Year) %>%  # Make sure data is ordered by year
  mutate(CumulativeInnerRing = cumsum(All))

# Bar plot with specified y-values
ggplot(data = DendroSiteAges, aes(x=Year, y = All)) +
  geom_col() +
  geom_line(data= annual_means, aes(x= Year, y= Mean) )
  # scale_y_continuous(name = "Inner Ring Count",sec.axis = sec_axis(~ ., name = "Cumulative Inner Ring Count") ) +
  labs(x = "Year", y = "Count", title = "Inner Ring Tree Ring Count") +
  theme_minimal()


```


```{r}
# Ensure Date in CampVerdeGuage is of type integer for proper alignment with Year in DendroSiteAges
CampVerdeGuage$Year <- as.numeric(format(CampVerdeGuage$Date, "%Y"))

ggplot() +
  # Bar plot for DendroSiteAges (ring count)
  geom_col(data = DendroSiteAges, aes(x = Year, y = All), fill = "grey", alpha = 0.7) +
  
  # Line plot for CampVerdeGuage (discharge) on a secondary y-axis
  geom_line(data = CampVerdeGuage, 
            aes(x = Year, y = Discharge * (max(DendroSiteAges$All) / max(CampVerdeGuage$Discharge)) ,log= "Y"),
            color = "darkblue", size = 1) +
  
  labs(x = "Year", 
       y = "Inner Ring Count", 
       title = "Inner Ring Tree Ring Count with Discharge") +
  
  # Set primary and secondary y-axis labels
    scale_y_continuous(
    name = "Inner Ring Count",
    sec.axis = sec_axis(~ . / (max(DendroSiteAges$All) / max(CampVerdeGuage$Discharge)), 
                        name = "Discharge (Log Scale)", )  # Applying log scale to secondary y-axis
  ) +
    scale_x_continuous(breaks = seq(min(DendroSiteAges$Year), max(DendroSiteAges$Year), by = 5)) +  # Set x-axis breaks every 5 years

  theme_minimal()

```


```{r}
 ggplot(DendroSiteAges, aes(x = Year, y = CumulativeInnerRing)) + 
  geom_line(color = "darkblue", size = 1) +
  labs(title = "Cumulative Core Count", y= "Count")


```






