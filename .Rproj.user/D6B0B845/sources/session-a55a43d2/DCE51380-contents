---
title: "Lab04"
author: "Your name here"
output: html_document
date: "`r format(Sys.time(), '%d %B, %Y')`"
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

# Lab 04 - Data manipulation

OK, your project this week is to use the tidyverse to explore a real life database of lakes from the northeast US.

```{r}
library(tidyverse)
```

First, load in the lake Epilimnetic data file (epinutr10871.csv)
```{r}
LakeEpil <- read_csv("LAGOSNE_epinutr10871.csv")
```


## 1. Prepare your data

1a. You've been asked to examine a bunch of nutrients in this lakes, with a special focus on indicators of eutrophication. You're not interested in all of these variables, but are specifically interested in chla, doc, nh4, ton, toc, tp, along with all of the data that accompanies each variable, and the identifying metadata (date, id, etc.). Go and "select" the columns you're interested.


```{r}
LakeEpilselected <- select(LakeEpil,eventida1087:sampledate, chla, doc, nh4, ton, toc, tp)


```



Great. Let's do some initial exploration.

1b. Create a tibble with all samples where chla is above 100

```{r}
ChlaOver100 <- filter(LakeEpilselected, chla > 100)

```


1c. Now restrict the tibble from 1b to only include samples where doc was measured

```{r}
ChlaplusDoc <- filter(ChlaOver100, !is.na(doc) )

```


1d. Add a new column to the table from 1c for month of sample date (hint: use the lubridate package and the mdy() and month() function)

```{r}

head(LakeEpilselected$sampledate)

LakewMonth <- mutate(ChlaplusDoc , Month = month(mdy(sampledate)))

```


1e. Restrict your table from 1d to only include all samples collected in the summer (June, July or August) (hint: try the between() function)

```{r}

Summer <- filter(LakewMonth, between (Month, 6,8))

```


1f. Starting with the original file you loaded in, create a new tibble where doc, nh4, toc and tp have observations (don't worry about the variable metadata, like qual and sensorcode) 

```{r}
LakeEpil2 <- filter(LakeEpil, 
                    !is.na(doc),
                    !is.na(nh4),
                    !is.na(toc),
                    !is.na(tp))


            LakeEpil2 <- select(LakeEpil2,1:6, doc,nh4,toc,tp,)
```


## 2. Examine your data

Ok, let's take look at the output of 1f, and make some new columns and sort these data based on several criteria

2a. First, exclude all of the columns that aren't completely populated (hint: try: select_if())

```{r}
NoNA <- select_if(LakeEpil2, ~ all(!is.na(.)))

```


2b. Make a new column that is the sum of doc, nh4, toc and tp variables

```{r}
NoNA <- mutate(NoNA, SumAll= doc+nh4+toc+tp)
```


2c. Move the sum column to be right after the sample date column

```{r}
NoNA <- select(NoNA, sampledate, SumAll, everything())
```


2d. Sort the data in descending order based on the new sum column, doc, nh4, toc and tp (in that order)

```{r}
NoNA <- arrange(NoNA, desc(SumAll), desc(doc), desc(nh4), desc(toc), desc(tp))
```


## 3. Summarize your data

Ok, let's summarize the entire dataset you originally loaded in by grouping by each lake, and then examining the mean of each of those variables

3a. first, group by lake

```{r}
LAKE <- group_by(LakeEpil,lagoslakeid)
```


3b. then use the summarize function to create a summary table.

```{r}
summarise(LAKE,
          count= n()
          )

```


3c. Now group it by month

```{r}
LAKE <- mutate(LAKE, NewMonth =(mdy(sampledate)))

               


LAKE <- group_by(LAKE, NewMonth)
```



3d. And use summarize look at the median value by month for each nutrient.

```{r}
LAKE <-
  summarise(LAKE,
    median_doc = median(doc, na.rm = TRUE),
    median_nh4 = median(nh4, na.rm = TRUE),
    median_toc = median(toc, na.rm = TRUE),
    median_tp = median(tp, na.rm = TRUE)
  )


```


## 4. Bring it together

OK. Now that you've got some experience with dplyr, let's try a bigger task, and try using the %>% or |> "pipe" operator to make our code easier to read..

4a. In a series of a commands using the %>% , start with the original dataset and 1) create a new column of sample years, 2) filter the data to only include entries since 1990, 3) add a new column that calculates TLI3 for each observation. TLI stands for Trophic Level Index, and it's a combination of chla, tp and nh4. Calculate it as the mean of those three values, but use the `scale()` function to z-score the data before calculating the mean.4) group your data by year, 5) summarize the mean TLI3. 


```{r}
Lake4 <- LakeEpil %>%
  mutate( SampleYear= year(mdy(sampledate))) %>%
  filter(SampleYear >= 1990) %>%
  mutate(TLI3 = scale(chla + tp + nh4))%>%
  group_by(SampleYear) %>%
  summarise(mean(TLI3, na.rm = TRUE))
  
  
```


```{r}
library(magrittr)
```

4b. then plot year vs mean TLI3


```{r}
plot(Lake4)


```



## Let's explore these lakes

Now we want to look at some of these patterns in space. But the spatial metadata for these lakes is in a different file. Load in the "lakeslocus" file and the "lakeslimno file"


5a. OK, we need to join these datasets to the epilimnetic data - start with the full epilimnetic dataset again
what variable should we use as our key?

```{r}
Prob5 <- read_csv("LAGOSNE_lakeslocus101.csv")

Prob5b<- read_csv("LAGOSNE_lakeslimno10871.csv")

#Use lagoslakeid
```


5b. Create a summary table that shows for each lake, it's lat, long, max depth, and mean tp

```{r}
Joined <- left_join(Prob5, Prob5b, by = "nhdid")



Join5b <- reframe(Joined, nhd_lat, nhd_long, maxdepth)
```



5c. Sort the table by TP (with the highest values on top)

```{r}
#Sorted <- arrange(desc(TP))

```



5d. make plots of lat, lon, and depth vs tp

```{r}
plot(Join5b$nhd_lat, Join5b$maxdepth, 
     xlab = "Latitude", 
     ylab = "Max Depth", 
     main = "Latitude vs Max Depth")

plot(Join5b$nhd_long, Join5b$maxdepth, 
     xlab = "Longitude", 
     ylab = "Max Depth", 
     main = "Longitude vs Max Depth")


#Latitude vs max depth has a stronger pattern


```





Which of those variables show the strongest patterns?

```{r}
#Latitude vs max depth has a stronger pattern

```



## 6. Let's start thinking about the data for your final project 

Now let's apply these concepts to data you care about. Find a dataset that is relevant to your research, this could be something you collected, or someone else in your lab, or from a relevant paper. Something that you might want to investigate. 


6a. Write some code that will read in data for your project, AND make it tidy
read about tidy data, and how to make data tidy here: http://r4ds.had.co.nz/tidy-data.html

```{r}

```



























