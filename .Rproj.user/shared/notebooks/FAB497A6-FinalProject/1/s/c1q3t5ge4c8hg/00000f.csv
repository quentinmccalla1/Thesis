"0","# Run ANOVA model"
"0","anova_model <- aov(Value ~ Variable * Date, data = long_data)"
"0","tukey_results <- TukeyHSD(anova_model)"
"2","Warning: non-factors ignored: Date"
"2","Warning: non-factors ignored: Variable, Date"
"2","Warning: 'which' specified some non-factors which will be dropped"
"0","# Function to extract Tukey's results into a data frame"
"0","extract_tukey_results <- function(tukey_result, comparison_name) {"
"0","  # Check if the comparison name exists in the Tukey results"
"0","  if (comparison_name %in% names(tukey_result)) {"
"0","    # Convert the matrix to a data frame"
"0","    tukey_df <- as.data.frame(tukey_result[[comparison_name]])"
"0","    "
"0","    # Add the Comparison names as a column"
"0","    tukey_df$Comparison <- rownames(tukey_df)"
"0","    "
"0","    # Reorder columns to match the desired format"
"0","    tukey_df <- tukey_df[, c(""Comparison"", ""diff"", ""lwr"", ""upr"", ""p adj"")]"
"0","    "
"0","    return(tukey_df)"
"0","  } else {"
"0","    # If comparison_name does not exist, return an empty data frame"
"0","    return(data.frame(Comparison = NA, Estimate = NA, Lower_CI = NA, Upper_CI = NA, P_Value = NA))"
"0","  }"
"0","}"
"0",""
"0","# Extract results for each comparison (Variable, Date, Variable:Date)"
"0","tukey_results_variable_df <- extract_tukey_results(tukey_results, ""Variable"")"
"0","tukey_results_date_df <- extract_tukey_results(tukey_results, ""Date"")"
"0","tukey_results_interaction_df <- extract_tukey_results(tukey_results, ""Variable:Date"")"
"0",""
"0","# Combine all the results into one table"
"0","tukey_Date <- data.frame(Comparison_Type = ""Date"", tukey_results_date_df)"
"0","tukeyVariable <- data.frame(Comparison_Type = ""Variable"", tukey_results_variable_df)"
"0","Variabledate <- data.frame(Comparison_Type = ""Variable:Date"", tukey_results_interaction_df)"
"0",""
"0","VariableDateSig <- Variabledate[c(3,6,11,14,18,21,24,29,33),]"
"0",""
"0","PValues <- rbind(VariableDateSig,tukey_Date)"
"0","row.names(PValues) <- NULL"
"0","Pvalues <- PValues[,-c(4,5)]"
"0",""
"0","Pvalues %>%"
"0","  kable(""html"", caption = ""Highlighted Rows Based on P-Value"") %>%"
"0","  kable_styling(full_width = FALSE) %>%"
"0","  row_spec(which(Pvalues$p.adj < 0.05), background = ""lightgreen"")"
