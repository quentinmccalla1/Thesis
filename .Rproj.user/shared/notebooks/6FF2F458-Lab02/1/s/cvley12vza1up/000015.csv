"0","# Assuming volcano is your matrix"
"0",""
"0","# Initialize matrices for slopes"
"0","NS_matrix <- matrix(NA, nrow = nrow(volcano) - 1, ncol = ncol(volcano))"
"0","EW_matrix <- matrix(NA, nrow = nrow(volcano), ncol = ncol(volcano) - 1)"
"0",""
"0","# Calculate N-S slopes (assuming Slope function is correct)"
"0","for (col in 1:ncol(volcano)) {"
"0","  elevation <- volcano[, col]"
"0","  slopes <- Slope(elevation)"
"0","  NS_matrix[1:length(slopes), col] <- slopes"
"0","}"
"0",""
"0","# Calculate E-W slopes (assuming Slope function is correct)"
"0","for (row in 1:nrow(volcano)) {"
"0","  elevation <- volcano[row, ]"
"0","  slopes <- Slope(elevation)"
"0","  EW_matrix[row, 1:length(slopes)] <- slopes"
"0","}"
"0",""
"0",""
"0",""
"0","# Pad NS_matrix and EW_matrix"
"0","padded_NS_matrix <- cbind(NS_matrix, rep(NA, nrow(NS_matrix))) # Add a column of NAs"
"0","padded_EW_matrix <- rbind(EW_matrix, rep(NA, ncol(EW_matrix))) # Add a row of NAs"
"0",""
"0","# Check dimensions"
"0","print(dim(padded_NS_matrix))  # Should be (nrow(volcano) - 1, ncol(volcano))"
"1","[1]"
"1"," 86"
"1"," 62"
"1","
"
"0","print(dim(padded_EW_matrix))  # Should be (nrow(volcano), ncol(volcano) - 1)"
"1","[1]"
"1"," 88"
"1"," 60"
"1","
"
"0","# Combine slopes by averaging"
"0","total_slope <- matrix(NA, nrow = nrow(padded_EW_matrix), ncol = ncol(padded_EW_matrix))"
"0",""
"0","# Assuming total_slope, padded_NS_matrix, and padded_EW_matrix should have the same dimensions"
"0","# Use the minimum row and column size to avoid out-of-bounds errors"
"0","min_rows <- min(nrow(padded_NS_matrix), nrow(padded_EW_matrix), nrow(total_slope))"
"0","min_cols <- min(ncol(padded_NS_matrix), ncol(padded_EW_matrix), ncol(total_slope))"
"0",""
"0","for (row in 1:min_rows) {"
"0","  for (col in 1:min_cols) {"
"0","    # Ensure the row and column exist in both matrices before accessing them"
"0","    if (!is.na(padded_NS_matrix[row, col]) && !is.na(padded_EW_matrix[row, col])) {"
"0","      total_slope[row, col] <- sqrt(padded_NS_matrix[row, col]^2 + padded_EW_matrix[row, col]^2)"
"0","    }"
"0","  }"
"0","}"
"0",""
"0","# Plot the total slope map"
"0","filled.contour(x = 1:ncol(total_slope), y = 1:nrow(total_slope), z = t(total_slope),"
"0","               color.palette = terrain.colors,"
"0","               xlab = ""Column Position"","
"0","               ylab = ""Row Position"","
"0","               main = ""Total Slope Map of the Volcano"")"
"0",""
