# Print significant months and correlation values
print(paste("Site:", site, "- Climate Variable:", var_name, "- Month:", month,
"- Correlation Value:", coef[month]))
}
} else {
print(paste("No significant months for site:", site, "-", var_name))
}
# Plot response and explicitly print
print(plot(response, main = paste("Site:", site, "-", var_name)))
}
# Add site summary to the results
results[[site]] <- site_summary
}
# Print the results for each site
print(results)
library(dplyr)
# Define a list of climate variables and their corresponding names
climate_data <- list(
MeanFlow = list(data = monthly_means, var_name = "Mean Flow"),
Precip = list(data = Precip, var_name = "Precip"),
MeanTemp = list(data = MeanTemp, var_name = "MeanTemp"),
PDSI = list(data = PDSImean, var_name = "PDSI")
)
# List to store results for each site
results <- list()
# Loop over the sites
for (site in c("LBcrn")) {  # Replace with your actual site names
site_results <- list()
# List to store the significant months and correlations for each site
site_summary <- data.frame(
Climate_Variable = character(),
Significant_Months = integer(),
Correlation_Values = numeric(),
stringsAsFactors = FALSE
)
# Loop over climate variables
for (climate_var in names(climate_data)) {
climate <- climate_data[[climate_var]]$data
var_name <- climate_data[[climate_var]]$var_name
# Perform dcc analysis
response <- dcc(
chrono = get(site),  # Use the site variable dynamically
climate = climate,
boot = "std",
method = "correlation",
selection = 1:12,
var_names = var_name
)
# Extract the True/False vector (significance indicator) from the response
significance_logical <- response$significant  # Adjust this to match the actual column name in your output
# Extract the correlation values
coef <- response$coef
# Find significant months where significance_logical is TRUE
significant_months <- which(significance_logical == TRUE)
# If there are significant months, store and print them
if (length(significant_months) > 0) {
for (month in significant_months) {
site_summary <- site_summary %>%
add_row(
Climate_Variable = var_name,
Significant_Months = month,
Correlation_Values = coef[month]
)
# Print significant months and correlation values
print(paste("Site:", site, "- Climate Variable:", var_name, "- Month:", month,
"- Correlation Value:", coef[month]))
}
} else {
print(paste("No significant months for site:", site, "-", var_name))
}
# Plot response and explicitly print
print(plot(response, main = paste("Site:", site, "-", var_name)))
}
# Add site summary to the results
results[[site]] <- site_summary
}
# Print the results for each site
print(results)
View(results)
View(response)
response[["coef"]][["ci_lower"]]
response[["coef"]][["significant"]]
library(dplyr)
# Define a list of climate variables and their corresponding names
climate_data <- list(
MeanFlow = list(data = monthly_means, var_name = "Mean Flow"),
Precip = list(data = Precip, var_name = "Precip"),
MeanTemp = list(data = MeanTemp, var_name = "MeanTemp"),
PDSI = list(data = PDSImean, var_name = "PDSI")
)
# List to store results for each site
results <- list()
# Loop over the sites
for (site in c("LBcrn")) {  # Replace with your actual site names
site_results <- list()
# List to store the significant months and correlations for each site
site_summary <- data.frame(
Climate_Variable = character(),
Significant_Months = integer(),
Correlation_Values = numeric(),
stringsAsFactors = FALSE
)
# Loop over climate variables
for (climate_var in names(climate_data)) {
climate <- climate_data[[climate_var]]$data
var_name <- climate_data[[climate_var]]$var_name
# Perform dcc analysis
response <- dcc(
chrono = get(site),  # Use the site variable dynamically
climate = climate,
boot = "std",
method = "correlation",
selection = 1:12,
var_names = var_name
)
# Extract the significant months logical vector
significant_logical <- response[["coef"]][["significant"]]
# Extract the correlation values (coef) for all months
coef <- response[["coef"]][["value"]]
# Find the months where significance is TRUE
significant_months <- which(significant_logical == TRUE)
# If there are significant months, store them
if (length(significant_months) > 0) {
for (month in significant_months) {
site_summary <- site_summary %>%
add_row(
Climate_Variable = var_name,
Significant_Months = month,
Correlation_Values = coef[month]
)
# Print significant months and correlation values
print(paste("Site:", site, "- Climate Variable:", var_name, "- Month:", month,
"- Correlation Value:", coef[month]))
}
} else {
print(paste("No significant months for site:", site, "-", var_name))
}
# Plot response and explicitly print
print(plot(response, main = paste("Site:", site, "-", var_name)))
}
# Add site summary to the results
results[[site]] <- site_summary
}
# Print the results for each site
print(results)
View(results)
results[["LBcrn"]][["Significant_Months"]]
results[["LBcrn"]]
library(dplyr)
# Define a list of climate variables and their corresponding names
climate_data <- list(
MeanFlow = list(data = monthly_means, var_name = "Mean Flow"),
Precip = list(data = Precip, var_name = "Precip"),
MeanTemp = list(data = MeanTemp, var_name = "MeanTemp"),
PDSI = list(data = PDSImean, var_name = "PDSI")
)
# List to store results for each site
results <- list()
# Loop over the sites
for (site in c("LBcrn","UBcrn")) {  # Replace with your actual site names
site_results <- list()
# List to store the significant months and correlations for each site
site_summary <- data.frame(
Climate_Variable = character(),
Significant_Months = integer(),
Correlation_Values = numeric(),
stringsAsFactors = FALSE
)
# Loop over climate variables
for (climate_var in names(climate_data)) {
climate <- climate_data[[climate_var]]$data
var_name <- climate_data[[climate_var]]$var_name
# Perform dcc analysis
response <- dcc(
chrono = get(site),  # Use the site variable dynamically
climate = climate,
boot = "exact",
method = "response",
selection = 1:12,
var_names = var_name
)
# Extract the significant months logical vector
significant_logical <- response[["coef"]][["significant"]]
# Extract the correlation values (coef) for all months
coef <- response[["coef"]][["value"]]
# Find the months where significance is TRUE
significant_months <- which(significant_logical == TRUE)
# If there are significant months, store them
if (length(significant_months) > 0) {
for (month in significant_months) {
site_summary <- site_summary %>%
add_row(
Climate_Variable = var_name,
Significant_Months = month,
Correlation_Values = coef[month]
)
# Print significant months and correlation values
print(paste("Site:", site, "- Climate Variable:", var_name, "- Month:", month,
"- Correlation Value:", coef[month]))
}
} else {
print(paste("No significant months for site:", site, "-", var_name))
}
# Plot response and explicitly print
print(plot(response, main = paste("Site:", site, "-", var_name)))
}
# Add site summary to the results
results[[site]] <- site_summary
}
# Print the results for each site
print(results)
View(results)
results[["UBcrn"]]
results[["LBcrn"]]
library(dplyr)
# Define a list of climate variables and their corresponding names
climate_data <- list(
MeanFlow = list(data = monthly_means, var_name = "Mean Flow"),
Precip = list(data = Precip, var_name = "Precip"),
MeanTemp = list(data = MeanTemp, var_name = "MeanTemp"),
PDSI = list(data = PDSImean, var_name = "PDSI")
)
# List to store results for each site
results <- list()
# Loop over the sites
for (site in c("LBcrn")) {  # Replace with your actual site names
site_results <- list()
# List to store the significant months and correlations for each site
site_summary <- data.frame(
Climate_Variable = character(),
Significant_Months = integer(),
Correlation_Values = numeric(),
stringsAsFactors = FALSE
)
# Loop over climate variables
for (climate_var in names(climate_data)) {
climate <- climate_data[[climate_var]]$data
var_name <- climate_data[[climate_var]]$var_name
# Perform dcc analysis
response <- dcc(
chrono = get(site),  # Use the site variable dynamically
climate = climate,
boot = "std",
method = "correlation",
selection = 1:12,
var_names = var_name
)
# Extract the significant months logical vector
significant_logical <- response[["coef"]][["significant"]]
# Extract the correlation values (coef) for all months
coef <- response[["coef"]][["value"]]
# Find the months where significance is TRUE
significant_months <- which(significant_logical == TRUE)
# If there are significant months, store them
if (length(significant_months) > 0) {
for (month in significant_months) {
site_summary <- site_summary %>%
add_row(
Climate_Variable = var_name,
Significant_Months = month,
Correlation_Values = coef[month]
)
# Print significant months and correlation values
print(paste("Site:", site, "- Climate Variable:", var_name, "- Month:", month,
"- Correlation Value:", coef[month]))
}
} else {
print(paste("No significant months for site:", site, "-", var_name))
}
}
# Add site summary to the results
results[[site]] <- site_summary
}
# Print the results for each site
print(results)
View(results)
results[["LBcrn"]]
library(dplyr)
# Define a list of climate variables and their corresponding names
climate_data <- list(
MeanFlow = list(data = monthly_means, var_name = "Mean Flow"),
Precip = list(data = Precip, var_name = "Precip"),
MeanTemp = list(data = MeanTemp, var_name = "MeanTemp"),
PDSI = list(data = PDSImean, var_name = "PDSI")
)
# List to store results for each site
results <- list()
# Loop over the sites
for (site in c("LBcrn","UBcrn","Childscrn","Allcrn","AllCorcrn","Sheepcrn")) {  # Replace with your actual site names
site_results <- list()
# List to store the significant months and correlations for each site
site_summary <- data.frame(
Climate_Variable = character(),
Significant_Months = integer(),
Correlation_Values = numeric(),
stringsAsFactors = FALSE
)
# Loop over climate variables
for (climate_var in names(climate_data)) {
climate <- climate_data[[climate_var]]$data
var_name <- climate_data[[climate_var]]$var_name
# Perform dcc analysis
response <- dcc(
chrono = get(site),  # Use the site variable dynamically
climate = climate,
boot = "exact",
method = "response",
selection = 1:12,
var_names = var_name
)
# Extract the significant months logical vector
significant_logical <- response[["coef"]][["significant"]]
# Extract the correlation values (coef) for all months
coef <- response[["coef"]][["value"]]
# Find the months where significance is TRUE
significant_months <- which(significant_logical == TRUE)
# If there are significant months, store them
if (length(significant_months) > 0) {
for (month in significant_months) {
site_summary <- site_summary %>%
add_row(
Climate_Variable = var_name,
Significant_Months = month,
Correlation_Values = coef[month]
)
# Print significant months and correlation values
print(paste("Site:", site, "- Climate Variable:", var_name, "- Month:", month,
"- Correlation Value:", coef[month]))
}
} else {
print(paste("No significant months for site:", site, "-", var_name))
}
}
# Add site summary to the results
results[[site]] <- site_summary
}
# Print the results for each site
print(results)
View(results)
results[["AllCorcrn"]]
View(response)
response[["coef"]][["coef"]]
library(dplyr)
# Define a list of climate variables and their corresponding names
climate_data <- list(
MeanFlow = list(data = monthly_means, var_name = "Mean Flow"),
Precip = list(data = Precip, var_name = "Precip"),
MeanTemp = list(data = MeanTemp, var_name = "MeanTemp"),
PDSI = list(data = PDSImean, var_name = "PDSI")
)
# List to store results for each site
results <- list()
# Loop over the sites
for (site in c("LBcrn","UBcrn","Childscrn","Allcrn","AllCorcrn","Sheepcrn")) {  # Replace with your actual site names
site_results <- list()
# List to store the significant months and correlations for each site
site_summary <- data.frame(
Climate_Variable = character(),
Significant_Months = integer(),
Correlation_Values = numeric(),
stringsAsFactors = FALSE
)
# Loop over climate variables
for (climate_var in names(climate_data)) {
climate <- climate_data[[climate_var]]$data
var_name <- climate_data[[climate_var]]$var_name
# Perform dcc analysis
response <- dcc(
chrono = get(site),  # Use the site variable dynamically
climate = climate,
boot = "std",
method = "correlation",
selection = 1:12,
var_names = var_name
)
# Extract coefficients and significance information
coef_values <- response[["coef"]][["coef"]]  # Correlation values
significant_logical <- response[["coef"]][["significant"]]  # Logical vector for significance
# Find the months where significance is TRUE
significant_months <- which(significant_logical == TRUE)
# If there are significant months, store them
if (length(significant_months) > 0) {
for (month in significant_months) {
# Extract the correlation value for the significant month
correlation_value <- coef_values[month]
if (!is.na(correlation_value)) {
site_summary <- site_summary %>%
add_row(
Climate_Variable = var_name,
Significant_Months = month,
Correlation_Values = correlation_value
)
# Print significant months and correlation values
print(paste("Site:", site, "- Climate Variable:", var_name, "- Month:", month,
"- Correlation Value:", correlation_value))
}
}
} else {
print(paste("No significant months for site:", site, "-", var_name))
}
}
# Add site summary to the results
results[[site]] <- site_summary
}
# Print the results for each site
print(results)
View(results)
results[["AllCorcrn"]]
kable(results)
# Define a list of climate variables and their corresponding names
climate_data <- list(
MeanFlow = list(data = monthly_means, var_name = "Mean Flow"),
Precip = list(data = Precip, var_name = "Precip"),
MeanTemp = list(data = MeanTemp, var_name = "MeanTemp"),
PDSI = list(data = PDSImean, var_name = "PDSI")
)
# List to store results for each site
results <- list()
# Loop over the sites
for (site in c("LBcrn","UBcrn","Childscrn","Allcrn","AllCorcrn","Sheepcrn")) {  # Replace with your actual site names
site_results <- list()
# List to store the significant months and correlations for each site
site_summary <- data.frame(
Site_ID = character(),
Climate_Variable = character(),
Significant_Months = integer(),
Correlation_Values = numeric(),
stringsAsFactors = FALSE
)
# Loop over climate variables
for (climate_var in names(climate_data)) {
climate <- climate_data[[climate_var]]$data
var_name <- climate_data[[climate_var]]$var_name
# Perform dcc analysis
response <- dcc(
chrono = get(site),  # Use the site variable dynamically
climate = climate,
boot = "std",
method = "correlation",
selection = 1:12,
var_names = var_name
)
# Extract coefficients and significance information
coef_values <- response[["coef"]][["coef"]]  # Correlation values
significant_logical <- response[["coef"]][["significant"]]  # Logical vector for significance
# Find the months where significance is TRUE
significant_months <- which(significant_logical == TRUE)
# If there are significant months, store them
if (length(significant_months) > 0) {
for (month in significant_months) {
# Extract the correlation value for the significant month
correlation_value <- coef_values[month]
if (!is.na(correlation_value)) {
site_summary <- site_summary %>%
add_row(
Site_ID = site,  # Add Site ID here
Climate_Variable = var_name,
Significant_Months = month,
Correlation_Values = correlation_value
)
# Print significant months and correlation values
print(paste("Site:", site, "- Climate Variable:", var_name, "- Month:", month,
"- Correlation Value:", correlation_value))
}
}
} else {
print(paste("No significant months for site:", site, "-", var_name))
}
}
# Add site summary to the results
results[[site]] <- site_summary
}
# Print the results for each site
print(results)
kable(results)
results %>%
kable() %>%
kable_styling(bootstrap_options = c("striped", "hover"), full_width = F) %>%
column_spec(1, bold = TRUE) %>%
add_header_above(c(" " = 1, "Climate Variables" = 2)) %>%
row_spec(0, bold = TRUE) %>%
add_table_border()
library(kableExtra)
results %>%
kable() %>%
kable_styling(bootstrap_options = c("striped", "hover"), full_width = F) %>%
column_spec(1, bold = TRUE) %>%
add_header_above(c(" " = 1, "Climate Variables" = 2)) %>%
row_spec(0, bold = TRUE) %>%
add_table_border()
results  %>%
kable() %>%
kable_styling(bootstrap_options = c("striped", "hover"), full_width = F,
position = "center", font_size = 14) %>%
row_spec(0, bold = TRUE) %>%     # Bold the header row
row_spec(1:nrow(df), border_left = TRUE, border_right = TRUE) %>%  # Add borders to each row
column_spec(1, bold = TRUE)      # Bold the first column
results %>%
kable() %>%
kable_styling(bootstrap_options = c("striped", "hover"), full_width = F,
position = "center", font_size = 14) %>%
row_spec(0, bold = TRUE) %>%     # Bold the header row
row_spec(1:nrow(df), background = "lightgray") %>%  # Optional: Change row background color
column_spec(1, bold = TRUE)      # Bold the first column
results %>%
kable() %>%
kable_styling(bootstrap_options = c("striped", "hover"), full_width = F,
position = "center", font_size = 14) %>%
row_spec(0, bold = TRUE) %>%     # Bold the header row
row_spec(1:nrow(results), background = "lightgray") %>%  # Change row background color
column_spec(1, bold = TRUE)      # Bold the first column
kable(results)
