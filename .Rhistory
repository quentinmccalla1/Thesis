, color ="black", vjust =-1, size = 3)+
annotate("text" , x = as.Date("2006-01-01"), y = 52700, label ="Restructuring flood"
, color ="black", vjust =-1, size = 3)+
geom_hline(yintercept = 108000, color = "blue", linetype = "dashed", size = 1)+
geom_point(aes(x=as.Date("1993-02-20") , y= 101000 ),shape= 18, size= 5, color = "black")+
geom_point(aes(x=as.Date("1995-03-6") , y= 75500 ),shape= 18, size= 5, color = "black")+
geom_point(aes(x=as.Date("2005-02-12") , y= 62000 ),shape= 18, size= 5, color = "black")+
theme_minimal()
ggplot(data = CampVerdeGuage, mapping = aes(x = Date, y = Discharge)) +
geom_line()+
geom_hline(yintercept = 26200, color = "blue", linetype = "dashed", size = 1)+
annotate("text" , x = as.Date("1991-04-01"), y = 24800, label ="Late Spring flood"
, color ="black", vjust =-1, size = 3)+
annotate("text" , x = as.Date("1991-01-01"), y = 1240, label ="Spring and Fall flood pulse"
, color ="black", vjust =-1, size = 3)+
geom_hline(yintercept  = 10500, color = "blue", linetype = "dashed", size = 1)+
annotate("text" ,x = as.Date("1990-04-01"), y = 42500, label ="Rejuvenating FLood"
, color ="black", vjust =-1, size = 3)+
annotate("text" , x = as.Date("1990-01-01"), y = 52700, label ="Restructuring flood"
, color ="black", vjust =-1, size = 3)+
geom_hline(yintercept = 108000, color = "blue", linetype = "dashed", size = 1)+
geom_point(aes(x=as.Date("1993-02-20") , y= 101000 ),shape= 18, size= 5, color = "black")+
geom_point(aes(x=as.Date("1995-03-6") , y= 75500 ),shape= 18, size= 5, color = "black")+
geom_point(aes(x=as.Date("2005-02-12") , y= 62000 ),shape= 18, size= 5, color = "black")+
theme_minimal()
ggplot(data = CampVerdeGuage, mapping = aes(x = Date, y = Discharge)) +
geom_line()+
geom_hline(yintercept = 26200, color = "blue", linetype = "dashed", size = 1)+
annotate("text" , x = as.Date("1991-04-01"), y = 24800, label ="Late Spring flood"
, color ="black", vjust =-1, size = 3)+
annotate("text" , x = as.Date("1991-01-01"), y = 1240, label ="Spring and Fall flood pulse"
, color ="black", vjust =-1, size = 3)+
geom_hline(yintercept  = 10500, color = "blue", linetype = "dashed", size = 1)+
annotate("text" ,x = as.Date("1990-04-01"), y = 42500, label ="Rejuvenating FLood"
, color ="black", vjust =-1, size = 3)+
annotate("text" , x = as.Date("1990-01-01"), y = 52700, label ="Restructuring flood"
, color ="black", vjust =-1, size = 3)+
geom_hline(yintercept = 108000, color = "blue", linetype = "dashed", size = 1)+
geom_point(aes(x=as.Date("1993-02-20") , y= 101000 ),shape= 18, size= 5, color = "black")+
geom_point(aes(x=as.Date("1995-03-6") , y= 75500 ),shape= 18, size= 5, color = "black")+
geom_point(aes(x=as.Date("2005-02-12") , y= 62000 ),shape= 18, size= 5, color = "black")+
theme_minimal()
ggplot(data = CampVerdeGuage, mapping = aes(x = Date, y = Discharge)) +
geom_line()+
geom_hline(yintercept = 26200, color = "blue", linetype = "dashed", size = 1)+
annotate("text" , x = as.Date("1991-04-01"), y = 24800, label ="Late Spring flood"
, color ="black", vjust =-1, size = 3)+
annotate("text" , x = as.Date("1991-01-01"), y = 1240, label ="Spring and Fall flood pulse"
, color ="black", vjust =-1, size = 3)+
geom_hline(yintercept  = 10500, color = "blue", linetype = "dashed", size = 1)+
annotate("text" ,x = as.Date("1990-04-01"), y = 42500, label ="Rejuvenating FLood"
, color ="black", vjust =-1, size = 3)+
geom_hline(yintercept = 108000, color = "blue", linetype = "dashed", size = 1)+
annotate("text" , x = as.Date("1990-01-01"), y = 52700, label ="Restructuring flood"
, color ="black", vjust =-1, size = 3)+
geom_point(aes(x=as.Date("1993-02-20") , y= 101000 ),shape= 18, size= 5, color = "black")+
geom_point(aes(x=as.Date("1995-03-6") , y= 75500 ),shape= 18, size= 5, color = "black")+
geom_point(aes(x=as.Date("2005-02-12") , y= 62000 ),shape= 18, size= 5, color = "black")+
theme_minimal()
ggplot(data = CampVerdeGuage, mapping = aes(x = Date, y = Discharge)) +
geom_line()+
geom_hline(yintercept = 26200, color = "blue", linetype = "dashed", size = 1)+
annotate("text" , x = as.Date("1991-04-01"), y = 24800, label ="Late Spring flood"
, color ="black", vjust =-1, size = 3)+
annotate("text" , x = as.Date("1991-01-01"), y = 1240, label ="Spring and Fall flood pulse"
, color ="black", vjust =-1, size = 3)+
geom_hline(yintercept  = 10500, color = "blue", linetype = "dashed", size = 1)+
annotate("text" ,x = as.Date("1990-04-01"), y = 42500, label ="Rejuvenating FLood"
, color ="black", vjust =-1, size = 3)+
geom_hline(yintercept = 108000, color = "blue", linetype = "dashed", size = 1)+
annotate("text" , x = as.Date("1990-01-01"), y = 52700, label ="Restructuring flood"
, color ="black", vjust =-1, size = 3)+
geom_point(aes(x=as.Date("1993-02-20") , y= 101000 ),shape= 18, size= 5, color = "black")+
geom_point(aes(x=as.Date("1995-03-6") , y= 75500 ),shape= 18, size= 5, color = "black")+
geom_point(aes(x=as.Date("2005-02-12") , y= 62000 ),shape= 18, size= 5, color = "black")+
theme_minimal()
ggplot(data = CampVerdeGuage, mapping = aes(x = Date, y = Discharge)) +
geom_line()+
geom_hline(yintercept = 26200, color = "blue", linetype = "dashed", size = 1)+
annotate("text" , x = as.Date("1991-04-01"), y = 24800, label ="Late Spring flood"
, color ="black", vjust =-1, size = 3)+
annotate("text" , x = as.Date("1991-01-01"), y = 1240, label ="Spring and Fall flood pulse"
, color ="black", vjust =-1, size = 3)+
geom_hline(yintercept  = 10500, color = "blue", linetype = "dashed", size = 1)+
annotate("text" ,x = as.Date("1990-04-01"), y = 42500, label ="Rejuvenating FLood"
, color ="black", vjust =-1, size = 3)+
geom_hline(yintercept = 108000, color = "blue", linetype = "dashed", size = 1)+
annotate("text" , x = as.Date("1990-01-01"), y = 108000, label ="Restructuring flood"
, color ="black", vjust =-1, size = 3)+
geom_point(aes(x=as.Date("1993-02-20") , y= 101000 ),shape= 18, size= 5, color = "black")+
geom_point(aes(x=as.Date("1995-03-6") , y= 75500 ),shape= 18, size= 5, color = "black")+
geom_point(aes(x=as.Date("2005-02-12") , y= 62000 ),shape= 18, size= 5, color = "black")+
theme_minimal()
ggplot(data = CampVerdeGuage, mapping = aes(x = Date, y = Discharge)) +
geom_line()+
geom_hline(yintercept = 26200, color = "blue", linetype = "dashed", size = 1)+
annotate("text" , x = as.Date("1991-04-01"), y = 26200, label ="Late Spring flood"
, color ="black", vjust =-1, size = 3)+
annotate("text" , x = as.Date("1991-01-01"), y = 1240, label ="Spring and Fall flood pulse"
, color ="black", vjust =-1, size = 3)+
geom_hline(yintercept  = 10500, color = "blue", linetype = "dashed", size = 1)+
annotate("text" ,x = as.Date("1990-04-01"), y = 10500, label ="Rejuvenating FLood"
, color ="black", vjust =-1, size = 3)+
geom_hline(yintercept = 52700, color = "blue", linetype = "dashed", size = 1)+
annotate("text" , x = as.Date("1990-01-01"), y = 52700, label ="Restructuring flood"
, color ="black", vjust =-1, size = 3)+
geom_point(aes(x=as.Date("1993-02-20") , y= 101000 ),shape= 18, size= 5, color = "black")+
geom_point(aes(x=as.Date("1995-03-6") , y= 75500 ),shape= 18, size= 5, color = "black")+
geom_point(aes(x=as.Date("2005-02-12") , y= 62000 ),shape= 18, size= 5, color = "black")+
theme_minimal()
ggplot(data = CampVerdeGuage, mapping = aes(x = Date, y = Discharge)) +
geom_line()+
geom_hline(yintercept = 26200, color = "blue", linetype = "dashed", size = 1)+
annotate("text" , x = as.Date("1991-04-01"), y = 26200, label ="Late Winter/Spring flood"
, color ="black", vjust =-1, size = 3)+
geom_hline(yintercept  = 10500, color = "blue", linetype = "dashed", size = 1)+
annotate("text" ,x = as.Date("1990-04-01"), y = 10500, label ="Rejuvenating FLood"
, color ="black", vjust =-1, size = 3)+
geom_hline(yintercept = 52700, color = "blue", linetype = "dashed", size = 1)+
annotate("text" , x = as.Date("1990-01-01"), y = 52700, label ="Restructuring flood"
, color ="black", vjust =-1, size = 3)+
geom_point(aes(x=as.Date("1993-02-20") , y= 101000 ),shape= 18, size= 5, color = "black")+
geom_point(aes(x=as.Date("1995-03-6") , y= 75500 ),shape= 18, size= 5, color = "black")+
geom_point(aes(x=as.Date("2005-02-12") , y= 62000 ),shape= 18, size= 5, color = "black")+
theme_minimal()
ggplot(data = CampVerdeGuage, mapping = aes(x = Date, y = Discharge)) +
geom_line()+
geom_hline(yintercept = 26200, color = "blue", linetype = "dashed", size = 1)+
annotate("text" , x = as.Date("1991-04-01"), y = 26200, label ="Late Winter/Spring flood"
, color ="black", vjust =-1, size = 3)+
geom_hline(yintercept  = 10500, color = "blue", linetype = "dashed", size = 1)+
annotate("text" ,x = as.Date("1991-04-01"), y = 10500, label ="Rejuvenating FLood"
, color ="black", vjust =-1, size = 3)+
geom_hline(yintercept = 52700, color = "blue", linetype = "dashed", size = 1)+
annotate("text" , x = as.Date("1991-01-01"), y = 52700, label ="Restructuring flood"
, color ="black", vjust =-1, size = 3)+
geom_point(aes(x=as.Date("1993-02-20") , y= 101000 ),shape= 18, size= 5, color = "black")+
geom_point(aes(x=as.Date("1995-03-6") , y= 75500 ),shape= 18, size= 5, color = "black")+
geom_point(aes(x=as.Date("2005-02-12") , y= 62000 ),shape= 18, size= 5, color = "black")+
theme_minimal()
ggplot(data = CampVerdeGuage, mapping = aes(x = Date, y = Discharge)) +
geom_line()+
geom_hline(yintercept = 26200, color = "blue", linetype = "dashed", size = 1)+
annotate("text" , x = as.Date("1992-04-01"), y = 26200, label ="Late Winter/Spring flood"
, color ="black", vjust =-1, size = 3)+
geom_hline(yintercept  = 10500, color = "blue", linetype = "dashed", size = 1)+
annotate("text" ,x = as.Date("1991-04-01"), y = 10500, label ="Rejuvenating FLood"
, color ="black", vjust =-1, size = 3)+
geom_hline(yintercept = 52700, color = "blue", linetype = "dashed", size = 1)+
annotate("text" , x = as.Date("1991-04-01"), y = 52700, label ="Restructuring flood"
, color ="black", vjust =-1, size = 3)+
geom_point(aes(x=as.Date("1993-02-20") , y= 101000 ),shape= 18, size= 5, color = "black")+
geom_point(aes(x=as.Date("1995-03-6") , y= 75500 ),shape= 18, size= 5, color = "black")+
geom_point(aes(x=as.Date("2005-02-12") , y= 62000 ),shape= 18, size= 5, color = "black")+
theme_minimal()
ggplot(data = CampVerdeGuage, mapping = aes(x = Date, y = Discharge)) +
geom_line()+
geom_hline(yintercept = 26200, color = "blue", linetype = "dashed", size = 1)+
annotate("text" , x = as.Date("1992-01-01"), y = 26200, label ="Late Winter/Spring flood"
, color ="black", vjust =-1, size = 3)+
geom_hline(yintercept  = 10500, color = "blue", linetype = "dashed", size = 1)+
annotate("text" ,x = as.Date("1991-04-01"), y = 10500, label ="Rejuvenating FLood"
, color ="black", vjust =-1, size = 3)+
geom_hline(yintercept = 52700, color = "blue", linetype = "dashed", size = 1)+
annotate("text" , x = as.Date("1991-04-01"), y = 52700, label ="Restructuring flood"
, color ="black", vjust =-1, size = 3)+
geom_point(aes(x=as.Date("1993-02-20") , y= 101000 ),shape= 18, size= 5, color = "black")+
geom_point(aes(x=as.Date("1995-03-6") , y= 75500 ),shape= 18, size= 5, color = "black")+
geom_point(aes(x=as.Date("2005-02-12") , y= 62000 ),shape= 18, size= 5, color = "black")+
theme_minimal()
ggplot(data = CampVerdeGuage, mapping = aes(x = Date, y = Discharge)) +
geom_line()+
geom_hline(yintercept = 26200, color = "blue", linetype = "dashed", size = 1)+
annotate("text" , x = as.Date("1991-06-01"), y = 26200, label ="Late Winter/Spring flood"
, color ="black", vjust =-1, size = 3)+
geom_hline(yintercept  = 10500, color = "blue", linetype = "dashed", size = 1)+
annotate("text" ,x = as.Date("1991-04-01"), y = 10500, label ="Rejuvenating FLood"
, color ="black", vjust =-1, size = 3)+
geom_hline(yintercept = 52700, color = "blue", linetype = "dashed", size = 1)+
annotate("text" , x = as.Date("1991-04-01"), y = 52700, label ="Restructuring flood"
, color ="black", vjust =-1, size = 3)+
geom_point(aes(x=as.Date("1993-02-20") , y= 101000 ),shape= 18, size= 5, color = "black")+
geom_point(aes(x=as.Date("1995-03-6") , y= 75500 ),shape= 18, size= 5, color = "black")+
geom_point(aes(x=as.Date("2005-02-12") , y= 62000 ),shape= 18, size= 5, color = "black")+
theme_minimal()
ggplot(data = CampVerdeGuage, mapping = aes(x = Date, y = Discharge)) +
geom_line()+
geom_hline(yintercept = 26200, color = "blue", linetype = "dashed", size = 1)+
annotate("text" , x = as.Date("1991-07-01"), y = 26200, label ="Late Winter/Spring flood"
, color ="black", vjust =-1, size = 3)+
geom_hline(yintercept  = 10500, color = "blue", linetype = "dashed", size = 1)+
annotate("text" ,x = as.Date("1991-04-01"), y = 10500, label ="Rejuvenating FLood"
, color ="black", vjust =-1, size = 3)+
geom_hline(yintercept = 52700, color = "blue", linetype = "dashed", size = 1)+
annotate("text" , x = as.Date("1991-04-01"), y = 52700, label ="Restructuring flood"
, color ="black", vjust =-1, size = 3)+
geom_point(aes(x=as.Date("1993-02-20") , y= 101000 ),shape= 18, size= 5, color = "black")+
geom_point(aes(x=as.Date("1995-03-6") , y= 75500 ),shape= 18, size= 5, color = "black")+
geom_point(aes(x=as.Date("2005-02-12") , y= 62000 ),shape= 18, size= 5, color = "black")+
theme_minimal()
knitr::opts_chunk$set(echo = TRUE)
spag.plot(Allcrn)
install.packages("dplR")
install.packages("treeclim")
install.packages("dplR")
install.packages("treeclim")
library(dplR)
library(tidyverse)
library(kableExtra)
library(knitr)
library(dplR)
spag.plot(Allcrn)
plot.crn(Allcrn, add.spline = TRUE, nyears = 5)
files <- c("ChildsCol1.rwl", "SheepCol1.rwl", "UBCol1.rwl",
"LBCol1.rwl", "All.rwl", "AllCorrelated.rwl", "All.3+.rwl", "Old.rwl")
# Step 1: Read in raw ring-width files
rwl_list <- lapply(files, read.tucson)
# Assign names to the datasets for clarity
names(rwl_list) <- c("Childs", "Sheep", "UB", "LB", "ALL", "ALLCor", "Crossdated", "Old")
# Step 4: Detrend original ring-width data for comparison
detrended_list <- lapply(rwl_list, function(rwl) detrend(rwl = rwl, method = "AgeDepSpline"))
# Step 5: Create ring-width chronologies
rwl_chron_list <- lapply(detrended_list, chron)
Childscrn <- rwl_chron_list[["Childs"]]
Sheepcrn <- rwl_chron_list[["Sheep"]]
UBcrn <- rwl_chron_list[["UB"]]
LBcrn <- rwl_chron_list[["LB"]]
Allcrn <- rwl_chron_list[["ALL"]]
AllCorcrn <- rwl_chron_list[["ALLCor"]]
Crosscrn <- rwl_chron_list[["Crossdated"]]
Oldcrn <- rwl_chron_list[["Old"]]
spag.plot(Allcrn)
# List of raw ring-width files
files <- c("ChildsCol1.rwl", "SheepCol1.rwl", "UBCol1.rwl",
"LBCol1.rwl", "All.rwl", "AllCorrelated.rwl", "All.3+.rwl", "Old.rwl")
# Assign names to the datasets
names(rwl_list) <- c("Childs", "Sheep", "UB", "LB", "ALL", "ALLCor", "Crossdated", "Old")
# Step 1: Read in raw ring-width files
rwl_list <- lapply(files, read.tucson)
# Step 2: Calculate BAI for each dataset
bai_list <- lapply(rwl_list, bai.in)
spag.plot(Childscrn)
spag.plot(rwl_list)
knitr::opts_chunk$set(echo = TRUE)
install.packages("dplR")
install.packages("treeclim")
library(dplR)
library(tidyverse)
library(kableExtra)
library(knitr)
install.packages("lmodel2")
install.packages("np")
install.packages("RcppArmadillo")
install.packages("np")
# Install the package from a local file
install.packages("C:/Users/qm43/Documents/GitHub/Thesis1/treeclim_2.0.6.0.tar.gz", repos = NULL, type = "source")
# Load the library
library(treeclim)
# Define a list of climate variables and their corresponding names
climate_data <- list(
MeanFlow = list(data = monthly_means, var_name = "Mean Flow"),
Precip = list(data = Precip, var_name = "Precip"),
MeanTemp = list(data = MeanTemp, var_name = "MeanTemp"),
PDSI = list(data = PDSImean, var_name = "PDSI")
)
# List to store results for each site
results <- list()
#,
# Loop over the sites,
for (site in c("AllCorcrn")) {  # Replace with your actual site names
site_results <- list()
# List to store the significant months and correlations for each site
site_summary <- data.frame(
Site_ID = character(),
Climate_Variable = character(),
Significant_Months = integer(),
Correlation_Values = numeric(),
stringsAsFactors = FALSE
)
# Loop over climate variables
for (climate_var in names(climate_data)) {
climate <- climate_data[[climate_var]]$data
var_name <- climate_data[[climate_var]]$var_name
# Perform dcc analysis
response <- dcc(
chrono = get(site),  # Use the site variable dynamically
climate = climate,
boot = "exact",
method = "response",
selection = -10:9,
var_names = var_name
)
# Extract coefficients and significance information
coef_values <- response[["coef"]][["coef"]]  # Correlation values
significant_logical <- response[["coef"]][["significant"]]  # Logical vector for significance
# Find the months where significance is TRUE
significant_months <- which(significant_logical == TRUE)
# If there are significant months, store them
if (length(significant_months) > 0) {
for (month in significant_months) {
# Extract the correlation value for the significant month
correlation_value <- coef_values[month]
if (!is.na(correlation_value)) {
site_summary <- site_summary %>%
add_row(
Site_ID = site,  # Add Site ID here
Climate_Variable = var_name,
Significant_Months = month,
Correlation_Values = correlation_value
)
# Print significant months and correlation values
print(paste("Site:", site, "- Climate Variable:", var_name, "- Month:", month,
"- Correlation Value:", correlation_value))
}
}
} else {
print(paste("No significant months for site:", site, "-", var_name))
}
}
# Add site summary to the results
results[[site]] <- site_summary
}
# Print the results for each site
kable(results, format = "latex", booktabs = TRUE)
print(results)
knitr::opts_chunk$set(echo = TRUE)
install.packages("dplR")
install.packages("treeclim")
library(dplR)
library(tidyverse)
library(kableExtra)
library(knitr)
install.packages("lmodel2")
install.packages("np")
install.packages("RcppArmadillo")
install.packages("np")
# Install the package from a local file
install.packages("C:/Users/qm43/Documents/GitHub/Thesis1/treeclim_2.0.6.0.tar.gz", repos = NULL, type = "source")
# Load the library
library(treeclim)
files <- c("ChildsCol1.rwl", "SheepCol1.rwl", "UBCol1.rwl",
"LBCol1.rwl", "All.rwl", "AllCorrelated.rwl", "All.3+.rwl", "Old.rwl")
# Step 1: Read in raw ring-width files
rwl_list <- lapply(files, read.tucson)
# Assign names to the datasets for clarity
names(rwl_list) <- c("Childs", "Sheep", "UB", "LB", "ALL", "ALLCor", "Crossdated", "Old")
# Step 4: Detrend original ring-width data for comparison
detrended_list <- lapply(rwl_list, function(rwl) detrend(rwl = rwl, method = "AgeDepSpline"))
# Step 5: Create ring-width chronologies
rwl_chron_list <- lapply(detrended_list, chron)
Childscrn <- rwl_chron_list[["Childs"]]
Sheepcrn <- rwl_chron_list[["Sheep"]]
UBcrn <- rwl_chron_list[["UB"]]
LBcrn <- rwl_chron_list[["LB"]]
Allcrn <- rwl_chron_list[["ALL"]]
AllCorcrn <- rwl_chron_list[["ALLCor"]]
Crosscrn <- rwl_chron_list[["Crossdated"]]
Oldcrn <- rwl_chron_list[["Old"]]
# List of raw ring-width files
files <- c("ChildsCol1.rwl", "SheepCol1.rwl", "UBCol1.rwl",
"LBCol1.rwl", "All.rwl", "AllCorrelated.rwl", "All.3+.rwl", "Old.rwl")
# Assign names to the datasets
names(rwl_list) <- c("Childs", "Sheep", "UB", "LB", "ALL", "ALLCor", "Crossdated", "Old")
# Step 1: Read in raw ring-width files
rwl_list <- lapply(files, read.tucson)
# Step 2: Calculate BAI for each dataset
bai_list <- lapply(rwl_list, bai.in)
View(AllCorcrn)
RWIvar <- var(AllCorcrn$std, na.rm= TRUE)
print(RWIvar)
library(zoo)
library(zoo)
RWIvar <- rollapply(AllCorcrn$std, width = 5, FUN = var, fill = NA)
install.packages("zoo")
install.packages("zoo")
RWIvar <- rollapply(AllCorcrn$std, width = 5, FUN = var)
RWIvar <- rollapply(AllCorcrn$std, width = 5, FUN = var)
RWIvar <- apply(AllCorcrn$std, 1, var, na.rm= TRUE)
ggplot()
RWIvar <- apply(AllCorcrn$std, 1, var, na.rm= TRUE)
RWIvar <- apply(AllCorcrn, 1, var, na.rm= TRUE)
BAIvar <- var(All_bai_crn)
print(BAIvar)
files <- c("ChildsCol1.rwl", "SheepCol1.rwl", "UBCol1.rwl",
"LBCol1.rwl", "All.rwl", "AllCorrelated.rwl", "All.3+.rwl", "Old.rwl")
# Step 1: Read in raw ring-width files
rwl_list <- lapply(files, read.tucson)
# Assign names to the datasets for clarity
names(rwl_list) <- c("Childs", "Sheep", "UB", "LB", "ALL", "ALLCor", "Crossdated", "Old")
# Step 4: Detrend original ring-width data for comparison
detrended_list <- lapply(rwl_list, function(rwl) detrend(rwl = rwl, method = "AgeDepSpline"))
# Step 5: Create ring-width chronologies
rwl_chron_list <- lapply(detrended_list, chron)
Childscrn <- rwl_chron_list[["Childs"]]
Sheepcrn <- rwl_chron_list[["Sheep"]]
UBcrn <- rwl_chron_list[["UB"]]
LBcrn <- rwl_chron_list[["LB"]]
Allcrn <- rwl_chron_list[["ALL"]]
AllCorcrn <- rwl_chron_list[["ALLCor"]]
Crosscrn <- rwl_chron_list[["Crossdated"]]
Oldcrn <- rwl_chron_list[["Old"]]
# List of raw ring-width files
files <- c("ChildsCol1.rwl", "SheepCol1.rwl", "UBCol1.rwl",
"LBCol1.rwl", "All.rwl", "AllCorrelated.rwl", "All.3+.rwl", "Old.rwl")
# Assign names to the datasets
names(rwl_list) <- c("Childs", "Sheep", "UB", "LB", "ALL", "ALLCor", "Crossdated", "Old")
# Step 1: Read in raw ring-width files
rwl_list <- lapply(files, read.tucson)
# Step 2: Calculate BAI for each dataset
bai_list <- lapply(rwl_list, bai.in)
RWIvar <- apply(AllCorcrn, 1, var, na.rm= TRUE)
print(RWIvar)
RWIyears <- as.numeric(rownames(AllCorcrn))
RWIvarDF <- data.frame(Year = RWIyears, Variance = RWIvar)
ggplot(RWIvarDF, aes(x = Year, y = Variance))+
geom_line(color = "blue")+
theme_minimal()
ggplot(RWIvarDF, aes(x = Year, y = Variance))+
geom_line(color = "blue")+
geom_ribbon(aes(ymin = Variance - sqrt(Variance), ymax = Variance + sqrt(Variance)),
fill= "blue")
theme_minimal()
View(RWIvarDF)
RWIvar <- apply(AllCorcrn, 1, var, na.rm= TRUE)
RWIyears <- as.numeric(rownames(AllCorcrn))
RWIvarDF <- data.frame(Year = RWIyears, Variance = RWIvar, RWI= AllCorcrn$std)
View(RWIvarDF)
RWIvarDF$SD <- sqrt(RWIvarDF$Variance)
View(RWIvarDF)
ggplot(RWIvarDF, aes(x = Year, y = RWI))+
geom_line(color = "blue")+
geom_ribbon(aes(ymin = Variance - sqrt(Variance), ymax = Variance + sqrt(Variance)),
fill= "blue")
theme_minimal()
ggplot(RWIvarDF, aes(x = Year, y = RWI))+
geom_line(color = "blue")+
geom_ribbon(aes(ymin = RWI - SD, ymax = RWI + SD),
fill= "blue")
theme_minimal()
ggplot(RWIvarDF, aes(x = Year, y = RWI))+
geom_line(color = "blue")+
geom_ribbon(aes( ymax = RWI + SD),
fill= "blue")
View(detrended_list)
AllCoraverage <- apply(Crosscrn,1,mean,na.rm=TRUE)
AllCoraverage <- apply(Crosscrn,1,mean,na.rm=TRUE)
se <- function(x){
x2 <- na.omit(x)
n <- length(x2)
sd(x2)/sqrt(n)
}
AllCorSE <- apply(Crosscrn, 1, se)
View(Crosscrn)
RWIVar <- data.frame(yrs= as.numeric(names(AllCoraverage)),
std = AllCoraverage,
lwr= AllCoraverage- AllCorSE*2,
upr = AllCoraverage+ AllCorSE*2)
View(RWIVar)
ggplot(RWIVar, aes(x= yrs))+
geom_hline(yintercept = 1, linetype= "dashed")+
geom_ribbon(aes(ymin = lwr, ymax = upr,
alpha = .5, fill = "blue"))+
geom_line(aes(y= std), col= "grey30")
chron(Crosscrn)
AllCoraverage <- apply(Crosscrn,1,mean,na.rm=TRUE)
se <- function(x){
x2 <- na.omit(x)
n <- length(x2)
sd(x2)/sqrt(n)
}
AllCorSE <- apply(Crosscrn, 1, se)
RWIVar <- data.frame(yrs= as.numeric(names(AllCoraverage)),
std = AllCoraverage,
lwr= AllCoraverage- AllCorSE*2,
upr = AllCoraverage+ AllCorSE*2)
ggplot(RWIVar, aes(x= yrs))+
geom_hline(yintercept = 1, linetype= "dashed")+
geom_ribbon(aes(ymin = lwr, ymax = upr,
a fill = "blue"))+
BAIvar <- var(All_bai_crn)
# List of raw ring-width files
files <- c("ChildsCol1.rwl", "SheepCol1.rwl", "UBCol1.rwl",
"LBCol1.rwl", "All.rwl", "AllCorrelated.rwl", "All.3+.rwl", "Old.rwl")
# Assign names to the datasets
names(rwl_list) <- c("Childs", "Sheep", "UB", "LB", "ALL", "ALLCor", "Crossdated", "Old")
# Step 1: Read in raw ring-width files
rwl_list <- lapply(files, read.tucson)
# Step 2: Calculate BAI for each dataset
bai_list <- lapply(rwl_list, bai.in)
View(bai_list)
View(bai_list)
BAIvar <- var(bai_list)
CrossBAI <- bai.in(Crossdated)
CrossBAI <- bai.in("All.3+.rwl")
Crossdated <- "All.3+.rwl"
CrossBAI <- bai.in(Crossdated)
ggplot(RWIvarDF, aes(x = Year, y = RWI))+
geom_line(color = "blue")+
geom_ribbon(aes(ymin = RWI - SD, ymax = RWI + SD),
fill= "blue")
theme_minimal()
Crossdated <- read.tucson("All.3+.rwl")
CrossBAI <- bai.in(Crossdated)
View(CrossBAI)
BAIvar <- var(CrossBAI)
View(BAIvar)
BAImean <- apply(CrossBAI,1,mean,na.rm=TRUE)
print(BAImean)
plot(BAImean)
BAIvar <- var(BAImean)
plot(BAIvar)
print(BAIvar)
