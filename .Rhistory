YearlyTemp <- YearlyTemp %>%
mutate(
Month = factor(Month, levels = 1:12, labels = month.name)  # Use month.name for full month names
)
wide_temp <- YearlyTemp %>%
pivot_wider(
names_from = Month,
values_from = Degrees_F
)
# View the reshaped data
print(wide_temp)
wide_temp <- YearlyTemp %>%
pivot_wider(
names_from = Month,
values_from = Degrees_F
)
# Identify duplicates
duplicates <- YearlyTemp %>%
group_by(Year, Month) %>%
summarise(n = n(), .groups = "drop") %>%
filter(n > 1)
if (nrow(duplicates) > 0) {
print("Duplicate entries found:")
print(duplicates)
} else {
print("No duplicates found.")
}
# Resolve duplicates by summarizing (e.g., taking the mean for each Year-Month)
YearlyTemp_clean <- YearlyTemp %>%
group_by(Year, Month) %>%
summarise(Degrees_F = mean(Degrees_F, na.rm = TRUE), .groups = "drop")
# Convert numeric months to full month names
YearlyTemp_clean <- YearlyTemp_clean %>%
mutate(
Month = factor(Month, levels = 1:12, labels = month.name)
)
# Pivot wider
wide_temp <- YearlyTemp_clean %>%
pivot_wider(
names_from = Month,
values_from = Degrees_F
)
# View the reshaped data
print(wide_temp)
MeanTemp <- MeanTemp %>%
pivot_wider(names_from = Month, values_from = MeanTemp, names_prefix = "Month_") %>%
arrange(Year)
YearlyTemp <- read_csv("AverageMonthlyTemp-YavapaiCounty_1993-2024.csv")
MeanTemp <- YearlyTemp %>%
group_by(year = Year) %>%  # If 'Year' is already numeric
summarise(mean_value = mean(`Degrees F`, na.rm = TRUE))
MeanTemp <- MeanTemp %>%
pivot_wider(names_from = Month, values_from = MeanTemp, names_prefix = "Month_") %>%
arrange(Year)
MeanTemp <- YearlyTemp %>%
group_by(Year, Month) %>%
summarise(mean_value = mean(`Degrees F`, na.rm = TRUE), .groups = "drop") %>%
pivot_wider(names_from = Month, values_from = mean_value, names_prefix = "Month_") %>%
arrange(Year)
# Rename columns to month names
month_names <- c("January", "February", "March", "April", "May", "June",
"July", "August", "September", "October", "November", "December")
# Assign the month names to the columns (excluding the "Year" column)
colnames(MeanTemp)[2:13] <- month_names
# View the resulting data
print(MeanTemp)
Response <- dcc(
chrono = AllCor_rwl_crn,
climate = MeanTemp,
var_names = c("MeanTEmp")
)
if (is.list(MeanTemp)) {
MeanTemp <- as.data.frame(MeanTemp)
}
Response <- dcc(
chrono = AllCor_rwl_crn,
climate = MeanTemp,
var_names = c("MeanTEmp")
)
plot(Response)
Response <- dcc(
chrono = AllCor_rwl_crn,
climate = MeanTemp, monthly_means,
var_names = c("MeanTEmp", "MeanFlow")
)
Response <- dcc(
chrono = AllCor_rwl_crn,
climate = (MeanTemp, monthly_means),
Response <- dcc(
chrono = AllCor_rwl_crn,
climate = (MeanTemp , monthly_means),
Response <- dcc(
chrono = AllCor_rwl_crn,
climate = (MeanTemp  monthly_means),
Response <- dcc(
chrono = AllCor_rwl_crn,
climate = list(MeanTemp , monthly_means),
var_names = c("MeanTEmp", "MeanFlow"))
plot(Response)
Response <- dcc(
chrono = AllCor_rwl_crn,
climate = list(MeanTemp , monthly_means),
var_names = c("MeanTEmp", "MeanFlow"))
Response <- dcc(
chrono = AllCor_rwl_crn,
climate =  monthly_means,
var_names = "MeanFlow")
plot(Response)
Response <- dcc(
chrono = Allcrn,
climate =  monthly_means,
var_names = "MeanFlow")
plot(Response)
Response <- dcc(
chrono = ALLCor,
climate =  monthly_means,
var_names = "MeanFlow")
plot(Response)
Response <- dcc(
chrono = All_bai_crn,
climate =  monthly_means,
var_names = "MeanFlow")
plot(Response)
Response <- dcc(
chrono = AllCor_bai_crn,
climate =  monthly_means,
var_names = "MeanFlow")
plot(Response)
Response <- dcc(
chrono = AllCor_rwl_crn,
climate =  monthly_means,
var_names = "MeanFlow")
plot(Response)
Response <- dcc(
chrono = Childs_rwl_crn,
climate =  monthly_means,
var_names = "MeanFlow")
plot(Response)
Response <- dcc(
chrono = Childs_rwl_crn,
climate =  monthly_means,
var_names = "MeanFlow")
plot(Response)
ResponseTemp <- dcc(
chrono = Childs_rwl_crn,
climate =  MeanTemp,
var_names = "MeanTemp")
plot(Response)
Response <- dcc(
chrono = Childs_rwl_crn,
climate =  monthly_means,
var_names = "MeanFlow")
plot(Response)
ResponseTemp <- dcc(
chrono = All_rwl_crn,
climate =  MeanTemp,
var_names = "MeanTemp")
plot(Response)
ResponseTemp <- dcc(
chrono = AllCor_rwl_crn,
climate =  MeanTemp,
var_names = "MeanTemp")
plot(Response)
ResponseTemp <- dcc(
chrono = AllCorcrn,
climate =  MeanTemp,
var_names = "MeanTemp")
plot(ResponseTemp)
ResponseTemp <- dcc(
chrono = All_rwl_crn,
climate =  MeanTemp,
var_names = "MeanTemp")
plot(ResponseTemp)
ResponseTemp <- dcc(
chrono = Childs_rwl_crn,
climate =  MeanTemp,
var_names = "MeanTemp")
plot(ResponseTemp)
Response <- dcc(
chrono = UB_rwl_crn,
climate =  monthly_means,
var_names = "MeanFlow")
plot(Response)
Response <- dcc(
chrono = All_rwl_crn,
climate =  monthly_means,
var_names = "MeanFlow")
plot(Response)
ResponseSeas <- seascorr(
chrono = Childs_rwl_crn,
climate =  monthly_means,
var_names = "MeanFlow")
ResponseSeas <- seascorr(
chrono = Childs_rwl_crn,
climate =  list(monthly_means, MeanTemp),
var_names = c("MeanFlow", "MeanTemp"))
YearlyTemp <- read.csv("AverageMonthlyTemp-YavapaiCounty_1993-2024")
YearlyTemp <- read.csv("AverageMonthlyTemp-YavapaiCounty_1993-2024.csv")
MeanTemp <- YearlyTemp %>%
group_by(Year, Month) %>%
summarise(mean_value = mean(`Degrees F`, na.rm = TRUE), .groups = "drop") %>%
pivot_wider(names_from = Month, values_from = mean_value, names_prefix = "Month_") %>%
arrange(Year)
View(YearlyTemp)
YearlyTemp <- read.csv("AverageMonthlyTemp-YavapaiCounty_1993-2024.csv")
MeanTemp <- YearlyTemp %>%
group_by(Year, Month) %>%
summarise(mean_value = mean(`Degrees F`, na.rm = TRUE), .groups = "drop") %>%
pivot_wider(names_from = Month, values_from = mean_value, names_prefix = "Month_") %>%
arrange(Year)
View(YearlyTemp)
MeanTemp <- YearlyTemp %>%
group_by(Year, Month) %>%
summarise(mean_value = mean(`Value`, na.rm = TRUE), .groups = "drop") %>%
pivot_wider(names_from = Month, values_from = mean_value, names_prefix = "Month_") %>%
arrange(Year)
# Rename columns to month names
month_names <- c("January", "February", "March", "April", "May", "June",
"July", "August", "September", "October", "November", "December")
# Assign the month names to the columns (excluding the "Year" column)
colnames(MeanTemp)[2:13] <- month_names
# View the resulting data
print(MeanTemp)
ResponseSeas <- seascorr(
chrono = Childs_rwl_crn,
climate =  list(monthly_means, MeanTemp),
var_names = c("MeanFlow", "MeanTemp"))
if (is.list(MeanTemp)) {
MeanTemp <- as.data.frame(MeanTemp)
}
ResponseSeas <- seascorr(
chrono = Childs_rwl_crn,
climate =  list(monthly_means, MeanTemp),
var_names = c("MeanFlow", "MeanTemp"))
plot(ResponseSeas)
Precip <- read.csv("YavapaiPrecip.csv")
Precip <- Precip %>%
group_by(Year, Month) %>%
summarise(mean_value = mean(`Value`, na.rm = TRUE), .groups = "drop") %>%
pivot_wider(names_from = Month, values_from = mean_value, names_prefix = "Month_") %>%
arrange(Year)
# Rename columns to month names
month_names <- c("January", "February", "March", "April", "May", "June",
"July", "August", "September", "October", "November", "December")
# Assign the month names to the columns (excluding the "Year" column)
colnames(Precip)[2:13] <- month_names
# View the resulting data
print(Precip)
Responseprecip <- dcc(
chrono = All_rwl_crn,
climate =  Precip,
var_names = "Precip")
if (is.list(Precip)) {
Precip <- as.data.frame(Precip)
}
Responseprecip <- dcc(
chrono = All_rwl_crn,
climate =  Precip,
var_names = "Precip")
plot(Responseprecip)
ResponseSeas <- seascorr(
chrono = Childs_rwl_crn,
climate =  list(monthly_means, MeanTemp, Precip),
var_names = c("MeanFlow", "MeanTemp", "Precip"))
plot(ResponseSeas)
ResponseSeas <- seascorr(
chrono = Childs_rwl_crn,
climate =  list(monthly_means, Precip),
var_names = c("MeanFlow", "Precip"))
plot(ResponseSeas)
ResponseSeas <- seascorr(
chrono = Childs_rwl_crn,
climate =  list(monthly_means, MeanTemp),
var_names = c("MeanFlow", "Temp"))
plot(ResponseSeas)
Responseprecip <- dcc(
chrono = All_rwl_crn,
climate =  Precip,
var_names = "Precip")
plot(Responseprecip)
Responseprecip <- dcc(
chrono = AllCor_rwl_crn,
climate =  Precip,
var_names = "Precip")
plot(Responseprecip)
Response <- dcc(
chrono = All_rwl_crn,
climate =  monthly_means,
selection = 1:4,
var_names = "MeanFlow")
plot(Response)
Response <- dcc(
chrono = All_rwl_crn,
climate =  monthly_means,
selection = 1:6,
var_names = "MeanFlow")
plot(Response)
Response <- dcc(
chrono = AllCor_rwl_crn,
climate =  monthly_means,
selection = 1:6,
var_names = "MeanFlow")
plot(Response)
Response <- dcc(
chrono = AllCor_rwl_crn,
climate =  monthly_means,
selection = 11:6,
var_names = "MeanFlow")
plot(Response)
Response <- dcc(
chrono = AllCor_rwl_crn,
climate =  monthly_means,
selection = 1:5,
var_names = "MeanFlow")
plot(Response)
ResponseTemp <- dcc(
chrono = Childs_rwl_crn,
climate =  MeanTemp,
selection = 4:9,
var_names = "MeanTemp")
plot(ResponseTemp)
ResponseTemp <- dcc(
chrono = AllCor_rwl_crn,
climate =  MeanTemp,
selection = 4:9,
var_names = "MeanTemp")
plot(ResponseTemp)
ResponseTemp <- dcc(
chrono = AllCor_rwl_crn,
climate =  MeanTemp,
#selection = 4:9,
var_names = "MeanTemp")
plot(ResponseTemp)
ResponseTemp <- dcc(
chrono = AllCor_rwl_crn,
climate =  MeanTemp,
selection = 3:9,
var_names = "MeanTemp")
plot(ResponseTemp)
ResponseTemp <- dcc(
chrono = AllCor_rwl_crn,
climate =  MeanTemp,
selection = 3:11,
var_names = "MeanTemp")
plot(ResponseTemp)
summary(ResponseTemp)
Response <- dcc(
chrono = AllCor_rwl_crn,
climate =  monthly_means,
selection = 1:5,
var_names = "MeanFlow")
plot(Response)
chronologies_list <- list(AllCor_rwl, All_rwl_crn, UB_rwl_crn, LB_rwl_crn, Childs_rwl_crn, Sheep_rwl_crn)  # Replace with your actual list of chronologies
chronologies_list <- list(AllCor_rwl_crn, All_rwl_crn, UB_rwl_crn, LB_rwl_crn, Childs_rwl_crn, Sheep_rwl_crn)  # Replace with your actual list of chronologies
# Loop through each chronology and run the dcc function
for (chrono_data in chronologies_list) {
Response <- dcc(
chrono = chrono_data,  # Use the current chronology
climate = monthly_means,
#selection = 1:5,  # Adjust as needed
var_names = "MeanFlow"
)
chronologies_list <- list(AllCor_rwl_crn, All_rwl_crn, UB_rwl_crn, LB_rwl_crn, Childs_rwl_crn, Sheep_rwl_crn)  # Replace with your actual list of chronologies
# Loop through each chronology and run the dcc function
for (chrono_data in chronologies_list) {
Response <- dcc(
chrono = chrono_data,  # Use the current chronology
climate = monthly_means,
#selection = 1:5,  # Adjust as needed
var_names = "MeanFlow"
)
}
plot(Response)
chronologies_list <- list(AllCor_rwl_crn, All_rwl_crn, UB_rwl_crn, LB_rwl_crn, Childs_rwl_crn, Sheep_rwl_crn)  # Replace with your actual list of chronologies
# Loop through each chronology and run the dcc function
for (chrono_data in chronologies_list) {
Response <- dcc(
chrono = chrono_data,  # Use the current chronology
climate = monthly_means,
#selection = 1:5,  # Adjust as needed
var_names = "MeanFlow"
)
}
plot(Response)
chronologies_list <- list(AllCor_rwl_crn, All_rwl_crn, UB_rwl_crn, LB_rwl_crn, Childs_rwl_crn, Sheep_rwl_crn)  # Replace with your actual list of chronologies
par(mfrow = c(length(chronologies_list), 1))  # Adjust the number of rows as needed
# Loop through each chronology and run the dcc function
for (chrono_data in chronologies_list) {
Response <- dcc(
chrono = chrono_data,  # Use the current chronology
climate = monthly_means,
#selection = 1:5,  # Adjust as needed
var_names = "MeanFlow"
)
}
plot(Response)
chronologies_list <- list(AllCor_rwl_crn, All_rwl_crn, UB_rwl_crn, LB_rwl_crn, Childs_rwl_crn, Sheep_rwl_crn)  # Replace with your actual list of chronologies
par(mfrow = c(length(chronologies_list), 1))  # Adjust the number of rows as needed
# Loop through each chronology and run the dcc function
for (chrono_data in chronologies_list) {
Response <- dcc(
chrono = chrono_data,  # Use the current chronology
climate = monthly_means,
#selection = 1:5,  # Adjust as needed
var_names = "MeanFlow"
)
plot(Response)
}
chronologies_list <- list(AllCor_rwl_crn, All_rwl_crn, UB_rwl_crn, LB_rwl_crn, Childs_rwl_crn, Sheep_rwl_crn)  # Replace with your actual list of chronologies
# Loop through each chronology and run the dcc function
for (chrono_data in chronologies_list) {
Response <- dcc(
chrono = chrono_data,  # Use the current chronology
climate = monthly_means,
#selection = 1:5,  # Adjust as needed
var_names = "MeanFlow"
)
plot(Response)
}
View(Response)
# List of chronologies
chronologies_list <- list(AllCor_rwl_crn, All_rwl_crn, UB_rwl_crn, LB_rwl_crn, Childs_rwl_crn, Sheep_rwl_crn)
# Set up the plotting window to show multiple plots
par(mfrow = c(length(chronologies_list), 1))  # Adjust the number of rows as needed
# Loop through each chronology and run the dcc function
for (chrono_data in chronologies_list) {
# Run dcc for each chronology
Response <- dcc(
chrono = chrono_data,  # Use the current chronology
climate = monthly_means,
#selection = 1:5,  # Adjust as needed
var_names = "MeanFlow"
)
# Plot the response inside the loop to display each plot
plot(Response)
}
# List of chronologies
chronologies_list <- list(AllCor_rwl_crn, All_rwl_crn, UB_rwl_crn, LB_rwl_crn, Childs_rwl_crn, Sheep_rwl_crn)
# Set up the plotting window to show multiple plots (adjust as needed)
par(mfrow = c(length(chronologies_list), 1))  # Adjust the number of rows and columns
# Loop through each chronology and run the dcc function
for (chrono_data in chronologies_list) {
# Run dcc for each chronology
Response <- dcc(
chrono = chrono_data,  # Use the current chronology
climate = monthly_means,
var_names = "MeanFlow"
)
# Explicitly call plot for each Response
plot(Response)
# Flush the plot to ensure it's rendered
dev.flush()
}
# Explicitly call plot for each Response
plot(Response)
chronologies_list <- list(AllCor_rwl_crn, All_rwl_crn, UB_rwl_crn, LB_rwl_crn, Childs_rwl_crn, Sheep_rwl_crn)  # Replace with your actual list of chronologies
# Loop through each chronology and run the dcc function
for (chrono_data in chronologies_list) {
Response <- dcc(
chrono = chrono_data,  # Use the current chronology
climate = monthly_means,
#selection = 1:5,  # Adjust as needed
var_names = "MeanFlow"
)
plot(Response)
}
chronologies_list <- list(AllCor_rwl_crn, All_rwl_crn, UB_rwl_crn, LB_rwl_crn, Childs_rwl_crn, Sheep_rwl_crn)  # Replace with your actual list of chronologies
# Loop through each chronology and run the dcc function
for (chrono_data in chronologies_list) {
Response <- dcc(
chrono = chrono_data,  # Use the current chronology
climate = monthly_means,
#selection = 1:5,  # Adjust as needed
var_names = "MeanFlow"
)
dev.new()
plot(Response)
}
for (chrono_data in chronologies_list) {
# Run dcc for each chronology
Response <- dcc(
chrono = chrono_data,  # Use the current chronology
climate = monthly_means,
var_names = "MeanFlow"
)
# Check if Response is not empty
if (length(Response) > 0) {
dev.new()
plot(Response)
} else {
print("No plot for this chronology")
}
}
print(Response)
chronologies_list <- list(AllCor_rwl_crn, All_rwl_crn, UB_rwl_crn, LB_rwl_crn, Childs_rwl_crn, Sheep_rwl_crn)  # Replace with your actual list of chronologies
# Loop through each chronology and run the dcc function
for (chrono_data in chronologies_list) {
Response <- dcc(
chrono = chrono_data,  # Use the current chronology
climate = monthly_means,
#selection = 1:5,  # Adjust as needed
var_names = "MeanFlow"
)
plot(Response)
}
Response <- dcc(
chrono = AllCor_rwl_crn,
climate =  monthly_means,
selection = 1:5,
var_names = "MeanFlow")
plot(Response)
plot(Response)
