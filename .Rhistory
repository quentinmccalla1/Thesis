#hist(Childs06_2024$Diameter)
wilcox.test(BRAP10_2023$Height,BRAP10_2024$Height)
#hist(Childs06_2024$Diameter)
wilcox.test(BRAP06_2024$Height,BRAP10_2024$Height)
#Childs HDR P-values <.001
t.test(ChildsHDR2023, ChildsHDR2024, var.equal = FALSE)
#Stats for childs diameters. <.001
wilcox.test(Childs10_2023$Diameter, Childs06_2024$Diameter)
#P value for childs heights. <.001
wilcox.test(Childs10_2023$Height, Childs06_2024$Height)
View(BrapAll)
anova_diameter <- aov(Diameter102023 ~ Diameter102024, data = BrapAll)
summary(anova_diameter)
View(BRAP_TABLE)
anova_diameter <- aov(Visit ~ Height, data = BRAP_TABLE)
BRAP_TABLE$Visit <- as.factor(BRAP_TABLE$Visit)
BRAP_TABLE <- na.omit(BRAP_TABLE)
anova_diameter <- aov(Visit ~ Height, data = BRAP_TABLE)
summary(anova_diameter)
BRAP_TABLE$Visit <- as.factor(BRAP_TABLE$Visit)
BRAP_TABLE <- na.omit(BRAP_TABLE)
anova_diameter <- aov(Visit ~ Height, data = BRAP_TABLE)
anova_height <- aov(Visit ~ Height, data = BRAP_TABLE)
summary(anova_diameter)
BRAP_TABLE$Visit <- as.factor(BRAP_TABLE$Visit)
BRAP_TABLE <- na.omit(BRAP_TABLE)
# Convert Visit to a factor if it isn't already
BRAP_TABLE$Visit <- as.factor(BRAP_TABLE$Visit)
# Ensure Height is numeric
BRAP_TABLE$Height <- as.numeric(BRAP_TABLE$Height)
anova_height <- aov(Visit ~ Height, data = BRAP_TABLE)
summary(anova_diameter)
# Ensure Height is numeric
BRAP_TABLE$Height <- as.numeric(BRAP_TABLE$Height)
anova_height <- aov(Visit ~ Height, data = BRAP_TABLE)
# Ensure Visit is a factor
BRAP_TABLE$Visit <- as.factor(BRAP_TABLE$Visit)
# Ensure Height is numeric
BRAP_TABLE$Height <- as.numeric(BRAP_TABLE$Height)
# Run ANOVA for Height
anova_height <- aov(Height ~ Visit, data = BRAP_TABLE)
# Get ANOVA summary
anova_summary_height <- summary(anova_height)
print(anova_summary_height)
# If significant, perform Tukey's HSD post-hoc test
tukey_height <- TukeyHSD(anova_height)
print(tukey_height)
# Ensure Visit is a factor
BRAP_TABLE$Visit <- as.factor(BRAP_TABLE$Visit)
# Ensure Height is numeric
BRAP_TABLE$Height <- as.numeric(BRAP_TABLE$Height)
# Run ANOVA for Height
anova_height <- aov(Height ~ Visit, data = BRAP_TABLE)
# Get ANOVA summary
anova_summary_height <- summary(anova_height)
print(anova_summary_height)
kruskal_test <- kruskal.test(Height ~ Visit, data = BRAP_TABLE)
print(kruskal_test)
kruskal_test <- kruskal.test(Diameter ~ Visit, data = BRAP_TABLE)
print(kruskal_test)
kruskal_test <- kruskal.test(Diameter ~ Diameter, data = BRAP_TABLE)
kruskal_test <- kruskal.test(Diameter ~ Visit, data = BRAP_TABLE)
print(kruskal_test)
kruskal_test <- kruskal.test(HDR ~ Visit, data = BRAP_TABLE)
print(kruskal_test)
welch_anova <- oneway.test(Height ~ Visit, data = BRAP_TABLE)
library(boot)
# Define a function to compute the mean
mean_function <- function(data, indices) {
return(mean(data[indices], na.rm = TRUE))
}
# Bootstrapping
results <- boot(data = BRAP_TABLE$Height, statistic = mean_function, R = 1000)
print(results)
print(results)
Childs_TABLE <- Childs_TABLE %>%
mutate(Visit = c("Oct 2023", "June 2024", "Oct 2024"))
Childs_TABLE <- Childs_TABLE %>%
mutate(Visit = c("Oct 2023", "June 2024"))
print(Childs_TABLE)
aov(Height ~ Visit, data = Childs_TABLE)
welch_anova <- oneway.test(Diameter ~ Visit, data = BRAP_TABLE)
kruskal_test <- kruskal.test(Diameter ~ Visit, data = BRAP_TABLE_clean)
kruskal_test <- kruskal.test(Diameter ~ Visit, data = BRAP_TABLE)
print(kruskal_test)
kruskal_test <- kruskal.test(HDR ~ Visit, data = BRAP_TABLE)
print(kruskal_test)
library(dplR)
DendroMerge <- read_csv("DendroMergeforR.csv")
DendroMerge <- DendroMerge[,-8]
View(DendroMerge)
DendroMerge <- read_csv("DendroMergeforR.csv")
ggplot(DendroMerge, aes(x = PithHand, y = `Diameter (CM)`, color= ID2)) +
labs( x= "Pith Year", y = "Diameter (cm)", title = "Diameter vs Pith Date") +
geom_point(shape=18, size= 3)+
geom_smooth( method = "lm", se = FALSE, size = 1.5)+
scale_y_continuous(
limits = c(0,100)
) +
scale_x_continuous(
limits = c(1985,2020)
)
knitr::opts_chunk$set(echo = TRUE)
#install.packages("dplR")
library(dplR)
Childs <- read.tucson("ChildsCol1.rwl")
Sheep <- read.tucson("SheepCol1.rwl")
UB <- read.tucson("UBCol1.rwl")
LB <- read.tucson("LBCol1.rwl")
ChildsRWI <- detrend( rwl = Childs, method = "AgeDepSpline")
#Childs
Chron.crn <- chron(ChildsRWI)
plot(Chron.crn, add.spline = TRUE, nyrs = 5)
BAI <- bai.out(Childs, diam = FALSE)
BAI <- bai.out(Childs, diam = NULL)
BAI.rwi <- detrend(rwl= BAI, method = "AgeDepSpline")
BAIChron <- chron(BAI.rwi)
plot.crn(BAIChron, add.spline=TRUE, nyrs = 5, window(x=1980))
ChildsRWI <- detrend( rwl = Childs, method = "AgeDepSpline") |>
chron(ChildsRWI)
View(LB)
ChildsRWI <- detrend( rwl = Childs, method = "AgeDepSpline")
SheepRWI <- detrend( rwl = Sheep, method = "AgeDepSpline")
UBRWI <- detrend(rwl= UB, method = "AgeDepSpline")
LBRWI <- detrend(rwl = LB, method = "AgeDepSpline")
ChildsCrn <- chron(ChildsRWI)
SheepCrn <- chron(SheepRWI)
UBCrn <- chron(UBRWI)
LBCrn <- chron(LBRWI)
View(SheepCrn)
View(ChildsCrn)
ggplot(data = ChildsCrn, aes(x= Year, y = std)) +
geom_line
ggplot(data = ChildsCrn, aes(x= Year, y = std))
plot(Chron.crn, add.spline = TRUE, nyrs = 5)
names(ChildsCrn) <- c("Year", "Index","Sample Size")
plot.crn(ChildsCrn, add.spline = TRUE, nyears = 5)
colnames(ChildsCrn)[1] <- "Year"
ChildsCrn <- chron(ChildsRWI)
SheepCrn <- chron(SheepRWI)
UBCrn <- chron(UBRWI)
LBCrn <- chron(LBRWI)
plot.crn(ChildsCrn, sample.depth= FALSE, add.spline = TRUE, nyears = 5)
plot.crn(ChildsCrn, sample.depth= FALSE, add.spline = TRUE, nyears = 5)
plot(ChildsCrn, sample.depth = FALSE,
main = "Chron Plot of RWI Without Sample Depth",
xlab = "Year",
ylab = "RWI",
col = "blue",
lty = 1,
lwd = 2)
ChildsCrn <- as.data.frame(ChildsCrn)
# Load necessary library
library(dplR)
# Create or load your chron object
ChildsRWI <- detrend(rwl = Childs, method = "AgeDepSpline")
chron_data <- chron(ChildsRWI)
# Convert chron object to data frame
chron_df <- as.data.frame(chron_data)
# Extract the year from row names and add it as a new column
chron_df$Year <- rownames(chron_df)  # Create a new column for Year
rownames(chron_df) <- NULL  # Remove row names if you don't want them
# Reorder columns if necessary (Year first)
chron_df <- chron_df[, c("Year", setdiff(names(chron_df), "Year"))]
# Write the data frame to a CSV file
write.csv(chron_df, "chron_data.csv", row.names = FALSE)  # Change the file name as needed
View(chron_data)
# Create a chron object
chron_data <- chron(ChildsRWI)
# Convert chron object to a data frame
chron_df <- as.data.frame(chron_data)
# Check if the years are in row names
years <- rownames(chron_df)  # Extract row names which may contain year information
# Add the year as a new column in the data frame
chron_df$Year <- years
View(Chron.crn)
plot.crn(ChildsCrn, , add.spline = TRUE, nyears = 5)
plot.crn(ChildsCrn, add.spline = TRUE, nyears = 5)
Basal Area Index
```{r}
BAI <- bai.out(Childs, diam = NULL)
ChildsCrn <- chron(ChildsRWI)
SheepCrn <- chron(SheepRWI)
UBCrn <- chron(UBRWI)
LBCrn <- chron(LBRWI)
plot.crn(ChildsCrn, add.spline = TRUE, nyears = 5)
ALL <- read.tucson("AllCorrelated.rwl")
ALLCor <- read.tucson("AllCorrelated.rwl")
ALLCor <- detrend(rwl= ALLCor, method = "AgeDepSpline")
AllCorCrn <- chron(ALLCor)
plot.crn(AllCorCrn, add.spline = TRUE, nyears = 5)
plot.crn(ChildsCrn, add.spline = TRUE, nyears = 5)
plot.crn(AllCorCrn, add.spline = TRUE, nyears = 5)
plot.crn(SheepCrn, add.spline = TRUE, nyears = 5)
plot.crn(UBCrn, add.spline = TRUE, nyears = 5)
plot.crn(LBCrn, add.spline = TRUE, nyears = 5)
plot.crn(ChildsCrn, add.spline = TRUE, nyears = 5)
plot.crn(AllCorCrn, add.spline = TRUE, nyears = 5)
ALL <- read.tucson("All.rwl")
ALL <- detrend(rwl = ALL, method = "AgeDepSpline")
Childs <- read.tucson("ChildsCol1.rwl")
Sheep <- read.tucson("SheepCol1.rwl")
Childs <- read.tucson("ChildsCol1.rwl")
UB <- read.tucson("UBCol1.rwl")
Sheep <- read.tucson("SheepCol1.rwl")
LB <- read.tucson("LBCol1.rwl")
ALL <- read.tucson("All.rwl")
ALLCor <- read.tucson("AllCorrelated.rwl")
Childs <- detrend( rwl = Childs, method = "AgeDepSpline")
Sheep <- detrend( rwl = Sheep, method = "AgeDepSpline")
UB <- detrend(rwl= UB, method = "AgeDepSpline")
LB <- detrend(rwl = LB, method = "AgeDepSpline")
ALL <- detrend(rwl = ALL, method = "AgeDepSpline")
ALLCor <- detrend(rwl= ALLCor, method = "AgeDepSpline")
Childs <- chron(ChildsRWI)
Childs <- chron(Childs)
Sheep <- chron(Sheep)
UBC <- chron(UB)
LBC <- chron(LB)
All <- chron(All)
All <- chron(ALL)
AllCor <- chron(ALLCor)
plot.crn(Sheep, add.spline = TRUE, nyears = 5)
plot.crn(UB, add.spline = TRUE, nyears = 5)
Childs <- chron(Childs)
Sheep <- chron(Sheep)
UB <- chron(UB)
LB <- chron(LB)
All <- chron(ALL)
AllCor <- chron(ALLCor)
plot.crn(Sheep, add.spline = TRUE, nyears = 5)
plot.crn(UB, add.spline = TRUE, nyears = 5)
plot.crn(LB, add.spline = TRUE, nyears = 5)
plot.crn(Childs, add.spline = TRUE, nyears = 5)
plot.crn(AllCor, add.spline = TRUE, nyears = 5)
plot.crn(all, add.spline = TRUE, nyears = 5)
plot.crn(All, add.spline = TRUE, nyears = 5)
plot.crn(Sheep, add.spline = TRUE, nyears = 5)
plot.crn(UB, add.spline = TRUE, nyears = 5)
plot.crn(LB, add.spline = TRUE, nyears = 5)
plot.crn(Childs, add.spline = TRUE, nyears = 5)
plot.crn(AllCor, add.spline = TRUE, nyears = 5)
plot.crn(All, add.spline = TRUE, nyears = 5)
plot.crn(Childs, add.spline = TRUE, nyears = 5)
knitr::opts_chunk$set(echo = TRUE)
#install.packages("dplR")
library(dplR)
Childs <- read.tucson("ChildsCol1.rwl")
Sheep <- read.tucson("SheepCol1.rwl")
UB <- read.tucson("UBCol1.rwl")
LB <- read.tucson("LBCol1.rwl")
ALL <- read.tucson("All.rwl")
ALLCor <- read.tucson("AllCorrelated.rwl")
summary.rwl(Childs)
Childs <- detrend( rwl = Childs, method = "AgeDepSpline")
Sheep <- detrend( rwl = Sheep, method = "AgeDepSpline")
UB <- detrend(rwl= UB, method = "AgeDepSpline")
LB <- detrend(rwl = LB, method = "AgeDepSpline")
ALL <- detrend(rwl = ALL, method = "AgeDepSpline")
ALLCor <- detrend(rwl= ALLCor, method = "AgeDepSpline")
Childs <- chron(Childs)
Sheep <- chron(Sheep)
UB <- chron(UB)
LB <- chron(LB)
All <- chron(ALL)
AllCor <- chron(ALLCor)
plot.crn(Childs, add.spline = TRUE, nyears = 5)
plot.crn(LB, add.spline = TRUE, nyears = 5)
plot.crn(Sheep, add.spline = TRUE, nyears = 5)
plot.crn(UB, add.spline = TRUE, nyears = 5)
plot.crn(LB, add.spline = TRUE, nyears = 5)
plot.crn(Childs, add.spline = TRUE, nyears = 5)
plot.crn(AllCor, add.spline = TRUE, nyears = 5)
plot.crn(All, add.spline = TRUE, nyears = 5)
ChildsBAI <- bai.out(Childs, diam = NULL)
plot.crn(BAIChron, add.spline=TRUE, nyrs = 5, window(x=1980))
ChildsBAI <- bai.out(Childs, diam = NULL)
BAI.rwi <- detrend(rwl= BAI, method = "AgeDepSpline")
plot.crn(ChildsBAI, add.spline=TRUE, nyrs = 5, window(x=1980))
ChildsBAI <- bai.out(Childs, diam = NULL)
ChildsBAI <- detrend(rwl= ChildsBAI, method = "AgeDepSpline")
ChildsBAI <- chron(ChilsBAI)
ChildsBAI <- detrend(rwl= ChildsBAI, method = "AgeDepSpline")
ChildsBAI <- chron(ChilsBAI)
ChildsBAI <- bai.out(Childs, diam = NULL)
plot.crn(ChildsBAI, add.spline=TRUE, nyrs = 5, window(x=1980))
ChildsBAI <- bai.out(Childs, diam = NULL)
ChildsBAI <- chron(ChilsBAI)
ChildsBAI <- chron(ChildsBAI)
plot.crn(ChildsBAI, add.spline=TRUE, nyrs = 5, window(x=1980))
View(ChildsBAI)
ChildsBAI <- bai.in(Childs, diam = NULL)
ChildsBAI <- bai.in(Childs, d2pith = NULL)
plot.crn(ChildsBAI, add.spline=TRUE, nyrs = 5, window(x=1980))
ChildsBAI <- chron(ChildsBAI)
plot.crn(ChildsBAI, add.spline=TRUE, nyrs = 5, window(x=1980))
View(ChildsBAI)
SheepBAI <- bai.in(Sheep, d2pith = NULL)
plot.crn(ChildsBAI, add.spline=TRUE, nyrs = 5, window(x=1980))
ChildsBAI <- chron(ChildsBAI)
SheepBAI <- bai.in(Sheep, d2pith = NULL)
ChildsBAI <- chron(ChildsBAI)
plot.crn(ChildsBAI, add.spline=TRUE, nyrs = 5, window(x=1980))
ChildsRWI <- detrend( rwl = Childs, method = "AgeDepSpline")
SheepRWI <- detrend( rwl = Sheep, method = "AgeDepSpline")
UBRWI <- detrend(rwl= UB, method = "AgeDepSpline")
LBRWI <- detrend(rwl = LB, method = "AgeDepSpline")
ALLRWI <- detrend(rwl = ALL, method = "AgeDepSpline")
ALLCorRWI <- detrend(rwl= ALLCor, method = "AgeDepSpline")
Childs <- chron(ChildsRWI)
Sheep <- chron(SheepRWI)
UB <- chron(UBRWI)
LB <- chron(LBRWI)
All <- chron(ALLRWI)
AllCor <- chron(ALLCorRWI)
plot.crn(Sheep, add.spline = TRUE, nyears = 5)
plot.crn(UB, add.spline = TRUE, nyears = 5)
plot.crn(LB, add.spline = TRUE, nyears = 5)
plot.crn(Childs, add.spline = TRUE, nyears = 5)
plot.crn(AllCor, add.spline = TRUE, nyears = 5)
plot.crn(All, add.spline = TRUE, nyears = 5)
plot.crn(Childs, add.spline = TRUE, nyears = 5)
Childs <- read.tucson("ChildsCol1.rwl")
Sheep <- read.tucson("SheepCol1.rwl")
UB <- read.tucson("UBCol1.rwl")
UB <- read.tucson("UBCol1.rwl")
Childs <- read.tucson("ChildsCol1.rwl")
Sheep <- read.tucson("SheepCol1.rwl")
UB <- read.tucson("UBCol1.rwl")
LB <- read.tucson("LBCol1.rwl")
ALL <- read.tucson("All.rwl")
ALLCor <- read.tucson("AllCorrelated.rwl")
Childs <- detrend( rwl = Childs, method = "AgeDepSpline")
Sheep <- detrend( rwl = Sheep, method = "AgeDepSpline")
UB <- detrend(rwl= UB, method = "AgeDepSpline")
LB <- detrend(rwl = LB, method = "AgeDepSpline")
ALL <- detrend(rwl = ALL, method = "AgeDepSpline")
ALLCor <- detrend(rwl= ALLCor, method = "AgeDepSpline")
Childs <- chron(Childs)
Sheep <- chron(Sheep)
UB <- chron(UB)
LB <- chron(LB)
All <- chron(ALL)
AllCor <- chron(ALLCor)
plot.crn(Sheep, add.spline = TRUE, nyears = 5)
plot.crn(UB, add.spline = TRUE, nyears = 5)
plot.crn(LB, add.spline = TRUE, nyears = 5)
plot.crn(Childs, add.spline = TRUE, nyears = 5)
plot.crn(AllCor, add.spline = TRUE, nyears = 5)
plot.crn(All, add.spline = TRUE, nyears = 5)
BAI <- bai.out(Childs, diam = NULL)
BAI.rwi <- detrend(rwl= BAI, method = "AgeDepSpline")
BAIChron <- chron(BAI.rwi)
plot.crn(BAIChron, add.spline=TRUE, nyrs = 5, window(x=1980))
bai.in(ALL, d2pith = NULL)
bai.in(ALL, d2pith = NULL)
AllBAI <- bai.in(ALL, d2pith = NULL)
plot(AllBAI)
AllBAIchrn <- chron(AllBAI)
plot.crn(AllBAIchrn)
plot(AllBAI)
plot(AllBAIchrn)
View(AllCor)
Childscrn <- chron(Childs)
Sheepcrn <- chron(Sheep)
UBcrn <- chron(UB)
LBcrn <- chron(LB)
Allcrn <- chron(ALL)
AllCorcrn <- chron(ALLCor)
plot.crn(Sheepcrn, add.spline = TRUE, nyears = 5)
plot.crn(UBcrn, add.spline = TRUE, nyears = 5)
plot.crn(LBcrn, add.spline = TRUE, nyears = 5)
plot.crn(Childscrn, add.spline = TRUE, nyears = 5)
plot.crn(AllCorcrn, add.spline = TRUE, nyears = 5)
plot.crn(Allcrn, add.spline = TRUE, nyears = 5)
knitr::opts_chunk$set(echo = TRUE)
#install.packages("dplR")
library(dplR)
Childs <- read.tucson("ChildsCol1.rwl")
Sheep <- read.tucson("SheepCol1.rwl")
UB <- read.tucson("UBCol1.rwl")
LB <- read.tucson("LBCol1.rwl")
ALL <- read.tucson("All.rwl")
ALLCor <- read.tucson("AllCorrelated.rwl")
summary.rwl(Childs)
Childs <- detrend( rwl = Childs, method = "AgeDepSpline")
Sheep <- detrend( rwl = Sheep, method = "AgeDepSpline")
UB <- detrend(rwl= UB, method = "AgeDepSpline")
LB <- detrend(rwl = LB, method = "AgeDepSpline")
ALL <- detrend(rwl = ALL, method = "AgeDepSpline")
ALLCor <- detrend(rwl= ALLCor, method = "AgeDepSpline")
Childscrn <- chron(Childs)
Sheepcrn <- chron(Sheep)
UBcrn <- chron(UB)
LBcrn <- chron(LB)
Allcrn <- chron(ALL)
AllCorcrn <- chron(ALLCor)
plot.crn(Sheepcrn, add.spline = TRUE, nyears = 5)
plot.crn(UBcrn, add.spline = TRUE, nyears = 5)
plot.crn(LBcrn, add.spline = TRUE, nyears = 5)
plot.crn(Childscrn, add.spline = TRUE, nyears = 5)
plot.crn(AllCorcrn, add.spline = TRUE, nyears = 5)
plot.crn(All, add.spline = TRUE, nyears = 5)
plot.crn(All, add.spline = TRUE, nyears = 5)
plot.crn(Sheepcrn, add.spline = TRUE, nyears = 5)
plot.crn(UBcrn, add.spline = TRUE, nyears = 5)
plot.crn(LBcrn, add.spline = TRUE, nyears = 5)
plot.crn(Childscrn, add.spline = TRUE, nyears = 5)
plot.crn(AllCorcrn, add.spline = TRUE, nyears = 5)
plot.crn(Allcrn, add.spline = TRUE, nyears = 5)
AllBAI <- bai.in(ALL, d2pith = NULL)
AllBAIchrn <- chron(AllBAI)
plot.crn(AllBAIchrn)
AllCor
ChildsBAI <- bai.in(Childs, d2pith = NULL)
ChildsBAIchrn <- chron(ChildsBAI)
plot.crn(ChildsBAIchrn)
AllBAI <- bai.in(ALL, d2pith = NULL)
AllBAIchrn <- chron(AllBAI)
plot.crn(AllBAIchrn)
ChildsBAI <- bai.in(Childs, d2pith = NULL)
ChildsBAIchrn <- chron(ChildsBAI)
plot.crn(ChildsBAIchrn)
SheepBAI <- bai.in(Sheep, d2pith = NULL)
SheepBAIchrn <- chron(SheepBAI)
plot.crn(SheepBAIchrn)
UBBAI <- bai.in(UB, d2pith = NULL)
UBBAIchrn <- chron(UBBAI)
plot.crn(UBBAIchrn)
AllCorBAI <- bai.in(ALLCor, d2pith = NULL)
AllCorBAIchrn <- chron(AllCorBAI)
plot.crn(AllCorBAIchrn)
LBBAI <- bai.in(LB, d2pith = NULL)
LBBAIchrn <- chron(LBBAI)
plot.crn(LBBAIchrn)
AllBAI <- bai.in(ALL, d2pith = NULL)
AllBAIchrn <- chron(AllBAI)
plot.crn(AllBAIchrn)
ChildsBAI <- bai.in(Childs, d2pith = NULL)
ChildsBAIchrn <- chron(ChildsBAI)
plot.crn(ChildsBAIchrn)
SheepBAI <- bai.in(Sheep, d2pith = NULL)
SheepBAIchrn <- chron(SheepBAI)
plot.crn(SheepBAIchrn)
UBBAI <- bai.in(UB, d2pith = NULL)
UBBAIchrn <- chron(UBBAI)
plot.crn(UBBAIchrn)
LBBAI <- bai.in(LB, d2pith = NULL)
LBBAIchrn <- chron(LBBAI)
plot.crn(LBBAIchrn)
AllCorBAI <- bai.in(ALLCor, d2pith = NULL)
AllCorBAIchrn <- chron(AllCorBAI)
plot.crn(AllCorBAIchrn)
AllBAI <- bai.in(ALL, d2pith = NULL)
AllBAIchrn <- chron(AllBAI)
plot.crn(AllBAIchrn)
AllCorBAI <- bai.in(ALLCor, d2pith = NULL)
AllCorBAIchrn <- chron(AllCorBAI)
plot.crn(AllCorBAIchrn)
ChildsBAI <- bai.in(Childs, d2pith = NULL)
ChildsBAIchrn <- chron(ChildsBAI)
plot.crn(ChildsBAIchrn)
SheepBAI <- bai.in(Sheep, d2pith = NULL)
SheepBAIchrn <- chron(SheepBAI)
plot.crn(SheepBAIchrn)
UBBAI <- bai.in(UB, d2pith = NULL)
UBBAIchrn <- chron(UBBAI)
plot.crn(UBBAIchrn)
LBBAI <- bai.in(LB, d2pith = NULL)
LBBAIchrn <- chron(LBBAI)
plot.crn(LBBAIchrn)
knitr::opts_chunk$set(echo = TRUE)
CampVerdeGuage <- readNWISdv(
"09506000",
"00060",
startDate = "1989-01-01",
endDate = "",
statCd = "00003"
)
#install.packages("dataRetrieval")
library(dataRetrieval)
library(ggplot2)
library(dplyr)
CampVerdeGuage <- readNWISdv(
"09506000",
"00060",
startDate = "1989-01-01",
endDate = "",
statCd = "00003"
)
CampVerdeGuage <- CampVerdeGuage %>%
rename(Discharge = X_00060_00003)
#Childs
ggplot(data = CampVerdeGuage, mapping = aes(x = Date, y = Discharge)) +
geom_line()+
labs(title = "Chlids")+
geom_vline(xintercept = as.Date("2023-06-15"), color = "red", linetype = "dashed", size = 1)+
geom_vline(xintercept = as.Date("2021-10-14"), color = "red", linetype = "dashed", size = 1)+
geom_vline(xintercept = as.Date("2017-06-04"), color = "red", linetype = "dashed", size = 1)+
geom_vline(xintercept = as.Date("2019-06-08"), color = "red", linetype = "dashed", size = 1)+
geom_vline(xintercept = as.Date("2010-06-15"), color = "red", linetype = "dashed", size = 1)+
geom_vline(xintercept = as.Date("2014-06-01"), color = "red", linetype = "dashed", size = 1)+
geom_vline(xintercept = as.Date("2013-06-05"), color = "red", linetype = "dashed", size = 1)+
geom_vline(xintercept = as.Date("2007-06-04"), color = "red", linetype = "dashed", size = 1)+
geom_vline(xintercept = as.Date("2005-06-01"), color = "red", linetype = "dashed", size = 1)+
geom_vline(xintercept = as.Date("2001-06-01"), color = "yellow", linetype = "dashed", size = 1)+
geom_hline( yintercept = 52700, color= "blue", linetype = "dashed", size =1)+
annotate("text", x = as.Date("1990-04-01"), y = 52700,
label = "Restructuring Flow", color = "black", vjust = -1, size = 3)+
geom_hline(yintercept = 10500, color = "blue", linetype = "dashed", size = 1)+
annotate("text" ,x = as.Date("1990-04-01"), y = 10500, label ="Rejuvenating  flow"
, color ="black", vjust =-1, size = 3)
